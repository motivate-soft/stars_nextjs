{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _CloseOutlined from \"@ant-design/icons/lib/icons/CloseOutlined\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport Input from \"@iso/components/uielements/input\";\nimport { FaMapPin } from \"react-icons/fa\";\n\nvar LocationSearchAutoComplete = /*#__PURE__*/function (_React$Component) {\n  _inherits(LocationSearchAutoComplete, _React$Component);\n\n  var _super = _createSuper(LocationSearchAutoComplete);\n\n  function LocationSearchAutoComplete(props) {\n    var _this;\n\n    _classCallCheck(this, LocationSearchAutoComplete);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (address) {\n      _this.setState({\n        address: address\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (address, placeId) {\n      _this.setState({\n        address: address\n      });\n\n      var request = {\n        placeId: placeId,\n        fields: [\"name\", \"geometry\", \"address_components\", \"formatted_address\", \"icon\", \"id\", \"name\", \"place_id\", \"reference\", \"scope\", \"types\", \"url\", \"utc_offset\", \"vicinity\"]\n      };\n\n      _this.placesService.getDetails(request, function (place, status) {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          _this.props.onPlaceChanged(place);\n\n          console.log(\"placesService\", place.geometry.location.lat(), place.geometry.location.lng());\n        }\n      });\n    });\n\n    _this.state = {\n      address: \"\"\n    }; // if (typeof window !== 'undefined'){\n    //\n    // }\n\n    if (true) {\n      _this.placesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n    }\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LocationSearchAutoComplete, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n      this.setState({\n        address: nextProps.address\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          name = _this$props.name;\n      return __jsx(PlacesAutocomplete, {\n        value: this.state.address,\n        onChange: this.handleChange,\n        onSelect: this.handleSelect\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return __jsx(\"div\", {\n          className: \"autocomplete-container\"\n        }, __jsx(\"div\", {\n          className: \"place-input-wrapper\"\n        }, __jsx(Input, getInputProps({\n          // name: name ? name : \"address\",\n          placeholder: placeholder ? placeholder : \"Search for address...\"\n        })), __jsx(_CloseOutlined, null)), __jsx(\"div\", {\n          className: \"autocomplete-dropdown-container\"\n        }, loading && __jsx(\"div\", null, \"Loading...\"), suggestions.map(function (suggestion, index) {\n          var className = suggestion.active ? \"suggestion-item active\" : \"suggestion-item\";\n          return __jsx(\"div\", _extends({\n            key: index\n          }, getSuggestionItemProps(suggestion, {\n            className: className\n          })), __jsx(FaMapPin, null), __jsx(\"span\", null, suggestion.description));\n        })));\n      });\n    }\n  }]);\n\n  return LocationSearchAutoComplete;\n}(React.Component);\n\nexport default LocationSearchAutoComplete;","map":null,"metadata":{},"sourceType":"module"}