{"ast":null,"code":"import { all, takeEvery, fork, takeLatest, call, put } from \"redux-saga/effects\";\nimport actions from \"./actions\";\nimport { notification } from \"@iso/components\";\nimport blogApi from \"../../service/blogApi\";\nexport function* getAllBlogs() {\n  yield takeLatest(actions.GET_ALL_BLOGS_REQUEST, function* () {\n    try {\n      const res = yield call(blogApi.getAll);\n      yield put({\n        type: actions.GET_ALL_BLOGS_SUCCESS,\n        items: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_ALL_BLOGS_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* getBlog() {\n  yield takeEvery(actions.GET_BLOG_REQUEST, function* (payload) {\n    try {\n      const res = yield call(blogApi.getOne, payload.blogId);\n      yield put({\n        type: actions.GET_BLOG_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_BLOG_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* addBlog() {\n  yield takeEvery(actions.ADD_BLOG_REQUEST, function* (payload) {\n    try {\n      const res = yield call(blogApi.add, payload.blog);\n      notification('success', 'New blog created');\n      yield put({\n        type: actions.ADD_BLOG_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.ADD_BLOG_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* updateBlog() {\n  yield takeEvery(actions.UPDATE_BLOG_REQUEST, function* (payload) {\n    try {\n      const res = yield call(blogApi.update, payload.blog);\n      notification('success', 'Blog has been updated successfully');\n      yield put({\n        type: actions.UPDATE_BLOG_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.UPDATE_BLOG_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* deleteBlog() {\n  yield takeEvery(actions.DELETE_BLOG_REQUEST, function* (payload) {\n    try {\n      yield call(blogApi.delete, payload.blogId);\n      notification('warning', 'Blog has been deleted successfully');\n      yield put({\n        type: actions.DELETE_BLOG_SUCCESS,\n        blogId: payload.blogId\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.DELETE_BLOG_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([call(getAllBlogs), fork(getBlog), fork(addBlog), fork(updateBlog), fork(deleteBlog)]);\n}","map":null,"metadata":{},"sourceType":"module"}