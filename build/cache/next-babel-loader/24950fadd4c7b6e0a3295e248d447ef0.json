{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport TopbarSearchModal from './TopbarSearchModal.styles';\nimport { TopbarSearchIcon } from '@iso/config/icon.config';\n\nfunction Searchbar(props) {\n  React.useEffect(function () {\n    var timer = setTimeout(function () {\n      try {\n        document.getElementById('InputTopbarSearch').focus();\n      } catch (e) {}\n    }, 200);\n    return function () {\n      clearTimeout(timer);\n    };\n  });\n  return __jsx(InputSearch, {\n    id: \"InputTopbarSearch\",\n    size: \"large\",\n    placeholder: \"Enter search text\",\n    onBlur: props.onBlur,\n    prefix: __jsx(TopbarSearchIcon, {\n      size: 24\n    })\n  });\n}\n\nexport default function TopbarSearch() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisibility = _React$useState2[1];\n\n  var customizedTheme = useSelector(function (state) {\n    return state.ThemeSwitcher.topbarTheme;\n  });\n\n  var handleCancel = function handleCancel() {\n    setVisibility(false);\n  };\n\n  var handleBlur = function handleBlur() {\n    setTimeout(function () {\n      setVisibility(false);\n    }, 200);\n  };\n\n  var showModal = function showModal() {\n    setVisibility(true);\n  };\n\n  return __jsx(\"div\", {\n    onClick: showModal\n  }, __jsx(TopbarSearchIcon, {\n    size: 24,\n    color: customizedTheme.textColor\n  }), __jsx(TopbarSearchModal, {\n    visible: visible,\n    onOk: handleCancel,\n    onCancel: handleCancel,\n    wrapClassName: \"isoSearchModal\",\n    width: \"60%\",\n    footer: null\n  }, __jsx(\"div\", {\n    className: \"isoSearchContainer\"\n  }, visible ? __jsx(Searchbar, {\n    onBlur: handleBlur\n  }) : '')));\n}","map":null,"metadata":{},"sourceType":"module"}