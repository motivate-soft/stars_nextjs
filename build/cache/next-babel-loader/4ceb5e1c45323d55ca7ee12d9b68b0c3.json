{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\containers\\\\Admin\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clone from 'clone';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/Logo.next';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nimport SIDEBAR_MENU_OPTIONS from './sidebar.navigations';\nimport { SidebarMenuLevelIcon } from '@iso/config/icon.config';\nvar SubMenu = Menu.SubMenu;\nvar MenuItemGroup = Menu.ItemGroup;\nvar Sider = _Layout.Sider;\nvar toggleOpenDrawer = appActions.toggleOpenDrawer,\n    changeOpenKeys = appActions.changeOpenKeys,\n    changeCurrent = appActions.changeCurrent,\n    toggleCollapsed = appActions.toggleCollapsed;\nexport default function Sidebar(props) {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.App;\n  }),\n      view = _useSelector.view,\n      openKeys = _useSelector.openKeys,\n      collapsed = _useSelector.collapsed,\n      openDrawer = _useSelector.openDrawer,\n      height = _useSelector.height,\n      current = _useSelector.current;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.ThemeSwitcher;\n  }),\n      sidebarTheme = _useSelector2.sidebarTheme;\n\n  var dispatch = useDispatch();\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(function () {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    var latestOpenKey = newOpenKeys.find(function (key) {\n      return !(openKeys.indexOf(key) > -1);\n    });\n    var latestCloseKey = openKeys.find(function (key) {\n      return !(newOpenKeys.indexOf(key) > -1);\n    });\n    var nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  var getAncestorKeys = function getAncestorKeys(key) {\n    var map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  var isCollapsed = collapsed && !openDrawer;\n  var mode = isCollapsed === true ? 'vertical' : 'inline';\n  var scrollheight = height;\n  var styling = {\n    backgroundColor: sidebarTheme.backgroundColor\n  };\n  var submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: sidebarTheme.textColor\n  };\n  var submenuColor = {\n    color: sidebarTheme.textColor\n  };\n\n  var onMouseEnter = function onMouseEnter() {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  var onMouseLeave = function onMouseLeave() {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  return __jsx(SidebarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(Sider, {\n    trigger: null,\n    collapsible: true,\n    collapsed: isCollapsed,\n    width: 240,\n    className: \"isomorphicSidebar\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    style: styling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    collapsed: isCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), __jsx(Scrollbars, {\n    style: {\n      height: scrollheight - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, __jsx(Menu, {\n    onClick: handleClick,\n    theme: \"dark\",\n    mode: mode,\n    openKeys: isCollapsed ? [] : openKeys,\n    selectedKeys: current,\n    onOpenChange: onOpenChange,\n    className: \"isoDashboardMenu\" // inlineCollapsed={isCollapsed}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, SIDEBAR_MENU_OPTIONS.map(function (option) {\n    return __jsx(SidebarMenu, {\n      key: option.key,\n      item: option,\n      submenuColor: submenuColor,\n      submenuStyle: submenuStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    });\n  })))));\n}\n\n_s(Sidebar, \"HmC3ArslnztY4CdsKiPU5JlIpII=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/containers/Admin/Sidebar/Sidebar.js"],"names":["React","useDispatch","useSelector","clone","Scrollbars","Menu","IntlMessages","appActions","Logo","SidebarWrapper","SidebarMenu","SIDEBAR_MENU_OPTIONS","SidebarMenuLevelIcon","SubMenu","MenuItemGroup","ItemGroup","Sider","toggleOpenDrawer","changeOpenKeys","changeCurrent","toggleCollapsed","Sidebar","props","state","App","view","openKeys","collapsed","openDrawer","height","current","ThemeSwitcher","sidebarTheme","dispatch","handleClick","e","key","setTimeout","onOpenChange","newOpenKeys","latestOpenKey","find","indexOf","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","map","sub3","isCollapsed","mode","scrollheight","styling","backgroundColor","submenuStyle","color","textColor","submenuColor","onMouseEnter","onMouseLeave","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport clone from 'clone';\nimport {Layout} from 'antd';\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\n\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/Logo.next';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nimport SIDEBAR_MENU_OPTIONS from './sidebar.navigations';\nimport {SidebarMenuLevelIcon} from '@iso/config/icon.config';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst {Sider} = Layout;\nconst {\n    toggleOpenDrawer,\n    changeOpenKeys,\n    changeCurrent,\n    toggleCollapsed,\n} = appActions;\nexport default function Sidebar(props) {\n    const {\n        view,\n        openKeys,\n        collapsed,\n        openDrawer,\n        height,\n        current,\n    } = useSelector((state) => state.App);\n    const {sidebarTheme} = useSelector((state) => state.ThemeSwitcher);\n    const dispatch = useDispatch();\n\n    function handleClick(e) {\n        dispatch(changeCurrent([e.key]));\n        if (view === 'MobileView') {\n            setTimeout(() => {\n                dispatch(toggleCollapsed());\n                // dispatch(toggleOpenDrawer());\n            }, 100);\n        }\n    }\n\n    function onOpenChange(newOpenKeys) {\n        const latestOpenKey = newOpenKeys.find(\n            (key) => !(openKeys.indexOf(key) > -1)\n        );\n        const latestCloseKey = openKeys.find(\n            (key) => !(newOpenKeys.indexOf(key) > -1)\n        );\n        let nextOpenKeys = [];\n        if (latestOpenKey) {\n            nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n        }\n        if (latestCloseKey) {\n            nextOpenKeys = getAncestorKeys(latestCloseKey);\n        }\n        dispatch(changeOpenKeys(nextOpenKeys));\n    }\n\n    const getAncestorKeys = (key) => {\n        const map = {\n            sub3: ['sub2'],\n        };\n        return map[key] || [];\n    };\n\n    const isCollapsed = collapsed && !openDrawer;\n    const mode = isCollapsed === true ? 'vertical' : 'inline';\n    const scrollheight = height;\n    const styling = {\n        backgroundColor: sidebarTheme.backgroundColor,\n    };\n    const submenuStyle = {\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        color: sidebarTheme.textColor,\n    };\n    const submenuColor = {\n        color: sidebarTheme.textColor,\n    };\n    const onMouseEnter = () => {\n        if (collapsed && openDrawer === false) {\n            dispatch(toggleOpenDrawer());\n        }\n        return;\n    };\n    const onMouseLeave = () => {\n        if (collapsed && openDrawer === true) {\n            dispatch(toggleOpenDrawer());\n        }\n        return;\n    };\n    return (\n        <SidebarWrapper>\n            <Sider\n                trigger={null}\n                collapsible={true}\n                collapsed={isCollapsed}\n                width={240}\n                className=\"isomorphicSidebar\"\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                style={styling}\n            >\n                <Logo collapsed={isCollapsed}/>\n                <Scrollbars style={{height: scrollheight - 70}}>\n                    <Menu\n                        onClick={handleClick}\n                        theme=\"dark\"\n                        mode={mode}\n                        openKeys={isCollapsed ? [] : openKeys}\n                        selectedKeys={current}\n                        onOpenChange={onOpenChange}\n                        className=\"isoDashboardMenu\"\n                        // inlineCollapsed={isCollapsed}\n                    >\n                        {SIDEBAR_MENU_OPTIONS.map((option) => (\n                            <SidebarMenu\n                                key={option.key}\n                                item={option}\n                                submenuColor={submenuColor}\n                                submenuStyle={submenuStyle}\n                            />\n                        ))}\n                    </Menu>\n                </Scrollbars>\n            </Sider>\n        </SidebarWrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}