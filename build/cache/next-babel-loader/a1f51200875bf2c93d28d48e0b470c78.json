{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\n/**\n *  import for legacy version of next-redux-wrapper\n */\n// import {Provider} from 'react-redux';\n// import withRedux from 'next-redux-wrapper';\n\nimport { createWrapper } from 'next-redux-wrapper';\nimport ThemeProvider from '../containers/Admin/ThemeProvider';\nimport initStore from '../redux/store';\nimport 'antd/dist/antd.css';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport 'react-dates/lib/css/_datepicker.css';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.core.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport '../style/global.css';\nimport GuestThemeProvider from \"../containers/Guest/GuestThemeProvider\";\nimport { SearchProvider } from \"@context/SearchProvider\";\nimport { BookingProvider, initBooking } from \"@context/BookingProvider\";\nimport GlobalStyles from \"../style/GlobalStyles\";\n\nclass CustomApp extends App {\n  render() {\n    const {\n      Component,\n      router,\n      pageProps,\n      store\n    } = this.props;\n    const {\n      query\n    } = router;\n\n    if ((router === null || router === void 0 ? void 0 : router.pathname.split('/')[0]) === 'admin') {\n      return (// <Provider store={store}>\n        __jsx(ThemeProvider, null, __jsx(Component, pageProps)) // </Provider>\n\n      );\n    }\n\n    return __jsx(GuestThemeProvider, null, __jsx(SearchProvider, {\n      query: query\n    }, __jsx(BookingProvider, {\n      booking: initBooking\n    }, __jsx(GlobalStyles, null), __jsx(Component, pageProps))));\n  }\n\n}\n\nconst wrapper = createWrapper(initStore, {\n  debug: true\n});\nexport default wrapper.withRedux(CustomApp); // export default withRedux(initStore)(CustomApp);","map":null,"metadata":{},"sourceType":"module"}