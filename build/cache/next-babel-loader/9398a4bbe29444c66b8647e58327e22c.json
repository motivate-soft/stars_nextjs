{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\containers\\\\Admin\\\\Topbar\\\\Topbar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport appActions from '@iso/redux/app/actions';\nimport TopbarNotification from './TopbarNotification';\nimport TopbarMessage from './TopbarMessage';\nimport TopbarSearch from './TopbarSearch';\nimport TopbarUser from './TopbarUser';\nimport TopbarAddtoCart from './TopbarAddToCart';\nimport TopbarWrapper from './Topbar.styles';\nimport { TopbarMenuIcon } from '@iso/config/icon.config';\nvar Header = _Layout.Header;\nvar toggleCollapsed = appActions.toggleCollapsed;\n\nvar Topbar = /*#__PURE__*/function (_Component) {\n  _inherits(Topbar, _Component);\n\n  var _super = _createSuper(Topbar);\n\n  function Topbar() {\n    _classCallCheck(this, Topbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Topbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          toggleCollapsed = _this$props.toggleCollapsed,\n          url = _this$props.url,\n          customizedTheme = _this$props.customizedTheme,\n          locale = _this$props.locale;\n      var collapsed = this.props.collapsed && !this.props.openDrawer;\n      var styling = {\n        background: customizedTheme.backgroundColor,\n        position: 'fixed',\n        width: '100%',\n        height: 70\n      };\n      return __jsx(TopbarWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, __jsx(Header, {\n        style: styling,\n        className: collapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"isoLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        className: collapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen',\n        style: {\n          color: customizedTheme.textColor\n        },\n        onClick: toggleCollapsed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, __jsx(TopbarMenuIcon, {\n        size: 24,\n        color: customizedTheme.textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }))), __jsx(\"ul\", {\n        className: \"isoRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, __jsx(\"li\", {\n        onClick: function onClick() {\n          return _this.setState({\n            selectedItem: 'user'\n          });\n        },\n        className: \"isoUser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, __jsx(TopbarUser, {\n        locale: locale,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Topbar;\n}(Component);\n\nexport default connect(function (state) {\n  return _objectSpread(_objectSpread({}, state.App), {}, {\n    locale: state.LanguageSwitcher.language.locale,\n    customizedTheme: state.ThemeSwitcher.topbarTheme\n  });\n}, {\n  toggleCollapsed: toggleCollapsed\n})(Topbar);","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/containers/Admin/Topbar/Topbar.js"],"names":["React","Component","connect","appActions","TopbarNotification","TopbarMessage","TopbarSearch","TopbarUser","TopbarAddtoCart","TopbarWrapper","TopbarMenuIcon","Header","toggleCollapsed","Topbar","props","url","customizedTheme","locale","collapsed","openDrawer","styling","background","backgroundColor","position","width","height","color","textColor","setState","selectedItem","state","App","LanguageSwitcher","language","ThemeSwitcher","topbarTheme"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,yBAA/B;IAEQC,M,WAAAA,M;IACAC,e,GAAoBT,U,CAApBS,e;;IAEFC,M;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AAAA,wBACmD,KAAKC,KADxD;AAAA,UACCF,eADD,eACCA,eADD;AAAA,UACkBG,GADlB,eACkBA,GADlB;AAAA,UACuBC,eADvB,eACuBA,eADvB;AAAA,UACwCC,MADxC,eACwCA,MADxC;AAEP,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAAX,IAAwB,CAAC,KAAKJ,KAAL,CAAWK,UAAtD;AACA,UAAMC,OAAO,GAAG;AACdC,QAAAA,UAAU,EAAEL,eAAe,CAACM,eADd;AAEdC,QAAAA,QAAQ,EAAE,OAFI;AAGdC,QAAAA,KAAK,EAAE,MAHO;AAIdC,QAAAA,MAAM,EAAE;AAJM,OAAhB;AAMA,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAEL,OADT;AAEE,QAAA,SAAS,EACPF,SAAS,GAAG,4BAAH,GAAkC,kBAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EACPA,SAAS,GAAG,0BAAH,GAAgC,qBAF7C;AAIE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,KAAK,EAAEV,eAAe,CAACW;AAAzB,SAJT;AAKE,QAAA,OAAO,EAAEf,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,MAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,EAAtB;AAA0B,QAAA,KAAK,EAAEI,eAAe,CAACW,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,CANF,EAkBE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,QAAL,CAAc;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAd,CAAN;AAAA,SADX;AAEE,QAAA,SAAS,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,MAAC,UAAD;AAAY,QAAA,MAAM,EAAEZ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CAlBF,CADF,CADF;AA+BD;;;;EAzCkBhB,S;;AA4CrB,eAAeC,OAAO,CACpB,UAAC4B,KAAD;AAAA,yCACKA,KAAK,CAACC,GADX;AAEEd,IAAAA,MAAM,EAAEa,KAAK,CAACE,gBAAN,CAAuBC,QAAvB,CAAgChB,MAF1C;AAGED,IAAAA,eAAe,EAAEc,KAAK,CAACI,aAAN,CAAoBC;AAHvC;AAAA,CADoB,EAMpB;AAAEvB,EAAAA,eAAe,EAAfA;AAAF,CANoB,CAAP,CAObC,MAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport appActions from '@iso/redux/app/actions';\r\nimport TopbarNotification from './TopbarNotification';\r\nimport TopbarMessage from './TopbarMessage';\r\nimport TopbarSearch from './TopbarSearch';\r\nimport TopbarUser from './TopbarUser';\r\nimport TopbarAddtoCart from './TopbarAddToCart';\r\nimport TopbarWrapper from './Topbar.styles';\r\nimport { TopbarMenuIcon } from '@iso/config/icon.config';\r\n\r\nconst { Header } = Layout;\r\nconst { toggleCollapsed } = appActions;\r\n\r\nclass Topbar extends Component {\r\n  render() {\r\n    const { toggleCollapsed, url, customizedTheme, locale } = this.props;\r\n    const collapsed = this.props.collapsed && !this.props.openDrawer;\r\n    const styling = {\r\n      background: customizedTheme.backgroundColor,\r\n      position: 'fixed',\r\n      width: '100%',\r\n      height: 70,\r\n    };\r\n    return (\r\n      <TopbarWrapper>\r\n        <Header\r\n          style={styling}\r\n          className={\r\n            collapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar'\r\n          }\r\n        >\r\n          <div className=\"isoLeft\">\r\n            <button\r\n              className={\r\n                collapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen'\r\n              }\r\n              style={{ color: customizedTheme.textColor }}\r\n              onClick={toggleCollapsed}\r\n            >\r\n              <TopbarMenuIcon size={24} color={customizedTheme.textColor} />\r\n            </button>\r\n          </div>\r\n\r\n          <ul className=\"isoRight\">\r\n            <li\r\n              onClick={() => this.setState({ selectedItem: 'user' })}\r\n              className=\"isoUser\"\r\n            >\r\n              <TopbarUser locale={locale} />\r\n            </li>\r\n          </ul>\r\n        </Header>\r\n      </TopbarWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    ...state.App,\r\n    locale: state.LanguageSwitcher.language.locale,\r\n    customizedTheme: state.ThemeSwitcher.topbarTheme,\r\n  }),\r\n  { toggleCollapsed }\r\n)(Topbar);\r\n"]},"metadata":{},"sourceType":"module"}