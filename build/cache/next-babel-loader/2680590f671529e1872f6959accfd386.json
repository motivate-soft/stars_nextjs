{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\redux\\\\authentication\\\\auth.utils.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport const getCookie = (key, req) => {\n  return false ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nconst getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n}; // export const login = ({token}) => {\n//     cookie.set('token', token, {expires: 1});\n//     Router.push('/admin');\n// };\n\n\nexport const auth = ctx => {\n  const {\n    token\n  } = nextCookie(ctx);\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/admin/signin'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/admin/signin');\n  }\n\n  return token;\n};\nexport const logout = () => {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', Date.now());\n  Router.push('/admin/signin');\n};\nexport const withAuthSync = WrappedComponent => {\n  const Wrapper = props => {\n    const syncLogout = event => {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/admin/signin');\n      }\n    };\n\n    useEffect(() => {\n      window.addEventListener('storage', syncLogout);\n      return () => {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  Wrapper.getInitialProps = async ctx => {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread(_objectSpread({}, componentProps), {}, {\n      token\n    });\n  };\n\n  return Wrapper;\n};","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/redux/authentication/auth.utils.js"],"names":["useEffect","Router","nextCookie","cookie","setCookie","key","value","set","expires","path","removeCookie","remove","getCookie","req","getCookieFromBrowser","getCookieFromServer","get","headers","undefined","rawCookie","split","find","c","trim","startsWith","auth","ctx","token","res","writeHead","Location","end","push","logout","window","localStorage","setItem","Date","now","withAuthSync","WrappedComponent","Wrapper","props","syncLogout","event","console","log","addEventListener","removeEventListener","removeItem","getInitialProps","componentProps"],"mappings":";;;;;;;;;;;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,aAAqB;AACjBH,IAAAA,MAAM,CAACI,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE,CADU;AAEnBC,MAAAA,IAAI,EAAE;AAFa,KAAvB;AAIH;AACJ,CAPM;AASP,OAAO,MAAMC,YAAY,GAAGL,GAAG,IAAI;AAC/B,aAAqB;AACjBF,IAAAA,MAAM,CAACQ,MAAP,CAAcN,GAAd,EAAmB;AACfG,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CANM;AAQP,OAAO,MAAMI,SAAS,GAAG,CAACP,GAAD,EAAMQ,GAAN,KAAc;AACnC,SAAO,QACDC,oBAAoB,CAACT,GAAD,CADnB,GAEDU,mBAAmB,CAACV,GAAD,EAAMQ,GAAN,CAFzB;AAGH,CAJM;;AAMP,MAAMC,oBAAoB,GAAGT,GAAG,IAAI;AAChC,SAAOF,MAAM,CAACa,GAAP,CAAWX,GAAX,CAAP;AACH,CAFD;;AAIA,MAAMU,mBAAmB,GAAG,CAACV,GAAD,EAAMQ,GAAN,KAAc;AACtC,MAAI,CAACA,GAAG,CAACI,OAAJ,CAAYd,MAAjB,EAAyB;AACrB,WAAOe,SAAP;AACH;;AACD,QAAMC,SAAS,GAAGN,GAAG,CAACI,OAAJ,CAAYd,MAAZ,CACbiB,KADa,CACP,GADO,EAEbC,IAFa,CAERC,CAAC,IAAIA,CAAC,CAACC,IAAF,GAASC,UAAT,CAAqB,GAAEnB,GAAI,GAA3B,CAFG,CAAlB;;AAGA,MAAI,CAACc,SAAL,EAAgB;AACZ,WAAOD,SAAP;AACH;;AACD,SAAOC,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAP;AACH,CAXD,C,CAaA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMK,IAAI,GAAGC,GAAG,IAAI;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAUzB,UAAU,CAACwB,GAAD,CAA1B;AACA;AACJ;AACA;AACA;;AACI,MAAIA,GAAG,CAACb,GAAJ,IAAW,CAACc,KAAhB,EAAuB;AACnBD,IAAAA,GAAG,CAACE,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAvB;AACAJ,IAAAA,GAAG,CAACE,GAAJ,CAAQG,GAAR;AACH,GATsB,CAWvB;;;AACA,MAAI,CAACJ,KAAL,EAAY;AACR1B,IAAAA,MAAM,CAAC+B,IAAP,CAAY,eAAZ;AACH;;AAED,SAAOL,KAAP;AACH,CAjBM;AAmBP,OAAO,MAAMM,MAAM,GAAG,MAAM;AACxB9B,EAAAA,MAAM,CAACQ,MAAP,CAAc,OAAd,EADwB,CAExB;;AACAuB,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCC,IAAI,CAACC,GAAL,EAAtC;AACArC,EAAAA,MAAM,CAAC+B,IAAP,CAAY,eAAZ;AACH,CALM;AAOP,OAAO,MAAMO,YAAY,GAAGC,gBAAgB,IAAI;AAC5C,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,UAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,UAAIA,KAAK,CAACvC,GAAN,KAAc,QAAlB,EAA4B;AACxBwC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA7C,QAAAA,MAAM,CAAC+B,IAAP,CAAY,eAAZ;AACH;AACJ,KALD;;AAOAhC,IAAAA,SAAS,CAAC,MAAM;AACZkC,MAAAA,MAAM,CAACa,gBAAP,CAAwB,SAAxB,EAAmCJ,UAAnC;AAEA,aAAO,MAAM;AACTT,QAAAA,MAAM,CAACc,mBAAP,CAA2B,SAA3B,EAAsCL,UAAtC;AACAT,QAAAA,MAAM,CAACC,YAAP,CAAoBc,UAApB,CAA+B,QAA/B;AACH,OAHD;AAIH,KAPQ,EAON,CAAC,IAAD,CAPM,CAAT;AASA,WAAO,MAAC,gBAAD,eAAsBP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAlBD;;AAoBAD,EAAAA,OAAO,CAACS,eAAR,GAA0B,MAAMxB,GAAN,IAAa;AACnC,UAAMC,KAAK,GAAGF,IAAI,CAACC,GAAD,CAAlB;AAEA,UAAMyB,cAAc,GAChBX,gBAAgB,CAACU,eAAjB,KACC,MAAMV,gBAAgB,CAACU,eAAjB,CAAiCxB,GAAjC,CADP,CADJ;AAIA,2CAAWyB,cAAX;AAA2BxB,MAAAA;AAA3B;AACH,GARD;;AAUA,SAAOc,OAAP;AACH,CAhCM","sourcesContent":["import {useEffect} from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\n\nexport const setCookie = (key, value) => {\n    if (process.browser) {\n        cookie.set(key, value, {\n            expires: 1,\n            path: '/',\n        });\n    }\n};\n\nexport const removeCookie = key => {\n    if (process.browser) {\n        cookie.remove(key, {\n            expires: 1,\n        });\n    }\n};\n\nexport const getCookie = (key, req) => {\n    return process.browser\n        ? getCookieFromBrowser(key)\n        : getCookieFromServer(key, req);\n};\n\nconst getCookieFromBrowser = key => {\n    return cookie.get(key);\n};\n\nconst getCookieFromServer = (key, req) => {\n    if (!req.headers.cookie) {\n        return undefined;\n    }\n    const rawCookie = req.headers.cookie\n        .split(';')\n        .find(c => c.trim().startsWith(`${key}=`));\n    if (!rawCookie) {\n        return undefined;\n    }\n    return rawCookie.split('=')[1];\n};\n\n// export const login = ({token}) => {\n//     cookie.set('token', token, {expires: 1});\n//     Router.push('/admin');\n// };\n\nexport const auth = ctx => {\n    const {token} = nextCookie(ctx);\n    /*\n     * If `ctx.req` is available it means we are on the server.\n     * Additionally if there's no token it means the user is not logged in.\n     */\n    if (ctx.req && !token) {\n        ctx.res.writeHead(302, {Location: '/admin/signin'});\n        ctx.res.end();\n    }\n\n    // We already checked for server. This should only happen on client.\n    if (!token) {\n        Router.push('/admin/signin');\n    }\n\n    return token;\n};\n\nexport const logout = () => {\n    cookie.remove('token');\n    // to support logging out from all windows\n    window.localStorage.setItem('logout', Date.now());\n    Router.push('/admin/signin');\n};\n\nexport const withAuthSync = WrappedComponent => {\n    const Wrapper = props => {\n        const syncLogout = event => {\n            if (event.key === 'logout') {\n                console.log('logged out from storage!');\n                Router.push('/admin/signin');\n            }\n        };\n\n        useEffect(() => {\n            window.addEventListener('storage', syncLogout);\n\n            return () => {\n                window.removeEventListener('storage', syncLogout);\n                window.localStorage.removeItem('logout');\n            };\n        }, [null]);\n\n        return <WrappedComponent {...props} />;\n    };\n\n    Wrapper.getInitialProps = async ctx => {\n        const token = auth(ctx);\n\n        const componentProps =\n            WrappedComponent.getInitialProps &&\n            (await WrappedComponent.getInitialProps(ctx));\n\n        return {...componentProps, token};\n    };\n\n    return Wrapper;\n};\n"]},"metadata":{},"sourceType":"module"}