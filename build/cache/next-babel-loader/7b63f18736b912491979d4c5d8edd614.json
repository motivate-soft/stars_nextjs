{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Col from \"antd/lib/col\";\nimport _Button from \"antd/lib/button\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport Link from 'next/link';\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport Tabs, { TabPane } from \"@iso/components/uielements/tabs\";\nimport Location from \"@components/Admin/Property/Location/Location\";\nimport basicStyle from \"@iso/assets/styles/constants\";\nimport Setting from \"@components/Admin/Property/Setting/Setting\";\nimport Main from \"@components/Admin/Property/Main/Main\";\nimport Amenity from \"@components/Admin/Property/Amenity/Amenity\";\nimport Rooms from \"@components/Admin/Property/Room/Rooms\";\nimport arrayMove from \"array-move\";\nimport Gallery from \"@components/Admin/Property/Gallery/Gallery\";\nimport Editor from \"@components/Admin/Property/Editor/Editor\";\nimport FeaturedImage from \"@components/Admin/Property/FeaturedImage/FeaturedImage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport propertyActions from \"@redux/properties/actions\";\nimport PricingCalendar from \"@components/Admin/Property/PricingCalendar/PricingCalendar\";\nimport SimilarProperty from \"@components/Admin/Property/SimilarProperty/SimilarProperty\";\nimport { SinglePropertyWrapper } from \"@components/Admin/Property/PropertyList.styles\";\n\nfunction uploadCallback(file) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID 8d26ccd12712fca\");\n    var data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", function () {\n      var response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", function () {\n      var error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nvar newProperty = {\n  name: \"\",\n  category: \"\",\n  bookervilleId: \"\",\n  description: \"\",\n  neighbourhood: \"\",\n  transit: \"\",\n  address: \"\",\n  lat: \"\",\n  lng: \"\",\n  rooms: [],\n  amenities: [],\n  galleryImgs: [],\n  featuredImg: null,\n  similarProperties: [],\n  price: \"\",\n  minPrice: \"\",\n  minMonthPrice: \"\",\n  bathroomCount: \"\",\n  bedroomCount: \"\",\n  sleeps: \"\",\n  minSleeps: 2,\n  cleaningFee: \"\",\n  transactionFeeRate: \"\",\n  taxRate: \"\",\n  tour360: \"\",\n  refundableAmount: \"\",\n  furnished: true,\n  rentalParking: true,\n  petsConsidered: true\n};\nexport default function EditProperty(props) {\n  var propertyId = props.propertyId;\n\n  var _React$useState = React.useState(newProperty),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.Properties;\n  }),\n      selectedItem = _useSelector.selectedItem;\n\n  var editorOption = {\n    style: {\n      width: \"90%\",\n      height: \"70%\"\n    },\n    toolbarClassName: \"home-toolbar\",\n    wrapperClassName: \"home-wrapper\",\n    editorClassName: \"home-editor\",\n    uploadCallback: uploadCallback,\n    toolbar: {\n      image: {\n        uploadCallback: uploadCallback\n      }\n    }\n  };\n  useEffect(function () {\n    dispatch(propertyActions.getProperty(propertyId));\n  }, []);\n  useEffect(function () {\n    if (selectedItem.id === parseInt(propertyId)) {\n      setState({\n        id: selectedItem.id,\n        bookervilleId: selectedItem.bookerville_id,\n        name: selectedItem.name,\n        category: \"\".concat(selectedItem.category),\n        address: selectedItem.address,\n        lat: selectedItem.lat,\n        lng: selectedItem.lng,\n        description: selectedItem.description,\n        neighbourhood: selectedItem.neighbourhood,\n        transit: selectedItem.transit,\n        price: selectedItem.price,\n        minPrice: selectedItem.min_price,\n        minMonthPrice: selectedItem.min_month_price,\n        bedroomCount: selectedItem.bedroom_count,\n        bathroomCount: selectedItem.bathroom_count,\n        similarProperties: selectedItem.similar_properties,\n        sleeps: selectedItem.sleeps,\n        minSleeps: selectedItem.min_sleeps,\n        cleaningFee: selectedItem.cleaning_fee,\n        transactionFeeRate: selectedItem.transactionfee_rate,\n        taxRate: selectedItem.tax_rate,\n        refundableAmount: selectedItem.refundable_amount,\n        tour360: selectedItem.tour360,\n        furnished: renderOptionValue(selectedItem.furnished),\n        rentalParking: renderOptionValue(selectedItem.rental_parking),\n        petsConsidered: renderOptionValue(selectedItem.pets_considered),\n        rooms: selectedItem.property_rooms.map(function (room) {\n          return {\n            id: room.id,\n            name: room.name,\n            bedType: room.bed_type\n          };\n        }),\n        amenities: selectedItem.amenities,\n        featuredImg: selectedItem.featured_img,\n        galleryImgs: selectedItem.gallery_imgs\n      });\n    }\n  }, [selectedItem]);\n  useEffect(function () {\n    console.log(\"state\", state);\n  }, [state]);\n\n  function callback(key) {\n    console.log(key);\n  }\n\n  function handleSave() {\n    var property = {\n      id: selectedItem.id,\n      bookerville_id: state.bookervilleId,\n      name: state.name,\n      category: state.category,\n      address: state.address,\n      lat: state.lat,\n      lng: state.lng,\n      description: state.description,\n      neighbourhood: state.neighbourhood,\n      transit: state.transit,\n      price: state.price,\n      min_price: state.minPrice,\n      min_month_price: state.minMonthPrice,\n      bedroom_count: state.bedroomCount,\n      bathroom_count: state.bathroomCount,\n      similar_properties: state.similarProperties,\n      sleeps: state.sleeps,\n      min_sleeps: state.minSleeps,\n      cleaning_fee: state.cleaningFee,\n      transactionfee_rate: state.transactionFeeRate,\n      tax_rate: state.taxRate,\n      refundable_amount: state.refundableAmount,\n      tour360: state.tour360,\n      furnished: state.furnished,\n      rental_parking: state.rentalParking,\n      pets_considered: state.petsConsidered,\n      property_rooms: makeRoomsArray(),\n      amenities: state.amenities,\n      featured_img: state.featuredImg.id,\n      gallery_imgs: state.galleryImgs.map(function (image) {\n        return image.id;\n      }),\n      images: state.images\n    };\n    dispatch(propertyActions.updateProperty(property));\n  }\n\n  function handleReset() {\n    setState(_objectSpread(_objectSpread({}, state), newProperty));\n  }\n\n  function renderOptionValue(value) {\n    if (value === true) {\n      return \"1\";\n    }\n\n    return \"0\";\n  }\n\n  function makeRoomsArray() {\n    var array = state.rooms.map(function (room) {\n      return room.id > 10000 ? {\n        name: room.name ? room.name : \"\",\n        bed_type: room.bedType ? room.bedType : \"\"\n      } : {\n        id: room.id,\n        name: room.name ? room.name : \"\",\n        bed_type: room.bedType ? room.bedType : \"\"\n      };\n    });\n    return array;\n  }\n\n  function handlePlaceChange(place) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      address: place.formatted_address,\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng()\n    }));\n  }\n\n  function handlePlaceReset() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      address: \"\",\n      lat: \"\",\n      lng: \"\"\n    }));\n  }\n\n  function handleSettingChange(changedValues, allValues) {\n    console.log(\"handleSettingChange\", changedValues, allValues);\n    setState(_objectSpread(_objectSpread({}, state), allValues));\n  }\n\n  function handleMainInfoChange(changedValues, allValues) {\n    console.log(\"handleMainInfoChange\", changedValues, allValues);\n    setState(_objectSpread(_objectSpread({}, state), allValues));\n  }\n\n  function handleToggleAmenityOption(amenityId) {\n    console.log(\"amenityId\", state.amenities, amenityId);\n    var array = state.amenities;\n    var index = array.indexOf(amenityId);\n\n    if (index > -1) {\n      array.splice(index, 1);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        amenities: array\n      }));\n    } else {\n      array.push(amenityId);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        amenities: array\n      }));\n    }\n\n    console.log(\"handleToggleAmenityOption\", array, state);\n  }\n\n  function handleChangeRoom(values, id) {\n    var newRooms = state.rooms.map(function (room, index) {\n      if (room.id === id) {\n        return _objectSpread(_objectSpread({}, room), values);\n      }\n\n      return room;\n    });\n    console.log(\"handleChangeRoom\", newRooms);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      rooms: newRooms\n    }));\n  }\n\n  function handleAddRoom() {\n    var generatedId = new Date().getTime();\n    console.log(\"array\", array, generatedId);\n    var array = state.rooms;\n    array.push({\n      id: generatedId,\n      name: \"\",\n      bedType: \"Q\"\n    });\n    console.log(\"handleAddRoom\", array);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      rooms: array\n    }));\n  }\n\n  function handleRemoveRoom(roomId) {\n    console.log(\"handleRemoveRoom\", roomId);\n    var array = state.rooms;\n    var index = array.findIndex(function (item) {\n      return item.id === roomId;\n    });\n\n    if (index > -1) {\n      array[index].name = \"\";\n      array[index].bedType = \"\";\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        rooms: array\n      }));\n    }\n  }\n\n  function handleUploadSuccess(image) {\n    var galleryImgs = state.galleryImgs;\n    galleryImgs.push(_objectSpread(_objectSpread({}, image), {}, {\n      order: galleryImgs.length - 1\n    }));\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      galleryImgs: galleryImgs\n    }));\n  }\n\n  function handleSortEnd(_ref) {\n    var oldIndex = _ref.oldIndex,\n        newIndex = _ref.newIndex;\n    var newArray = arrayMove(state.galleryImgs, oldIndex, newIndex);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      galleryImgs: newArray.map(function (image, index) {\n        return _objectSpread(_objectSpread({}, image), {}, {\n          order: index + 1\n        });\n      })\n    }));\n  }\n\n  function handleSelectFeatured(image) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      featuredImg: image\n    }));\n  }\n\n  function handleSimilarPropertyChange(propertyIds) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      similarProperties: propertyIds\n    }));\n  }\n\n  var rowStyle = basicStyle.rowStyle,\n      colStyle = basicStyle.colStyle;\n  return __jsx(LayoutWrapper, null, __jsx(SinglePropertyWrapper, null, __jsx(\"div\", {\n    className: \"property-detail-actions\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    onClick: handleSave,\n    style: {\n      marginRight: 20\n    }\n  }, \"Save\"), __jsx(_Button, {\n    type: \"default\",\n    onClick: handleReset\n  }, \"Reset\"), __jsx(Link, {\n    href: \"/admin/property\"\n  }, __jsx(_Button, {\n    type: \"primary\"\n  }, \"Back to List\")), __jsx(\"a\", {\n    href: \"/listing/\".concat(selectedItem.slug),\n    target: \"_blank\"\n  }, \"Preview\")), __jsx(_Row, {\n    style: rowStyle,\n    gutter: 0,\n    justify: \"start\"\n  }, __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    style: colStyle\n  }, __jsx(\"div\", {\n    className: \"property-detail-main\"\n  }, state.name !== \"\" && __jsx(Main, {\n    name: state.name,\n    bookervilleId: state.bookervilleId,\n    category: state.category,\n    onValuesChange: handleMainInfoChange\n  }), __jsx(Gallery, {\n    items: state.galleryImgs,\n    onSortEnd: handleSortEnd,\n    onUploadSuccess: handleUploadSuccess\n  }), __jsx(FeaturedImage, {\n    items: state.galleryImgs,\n    selectedItem: state.featuredImg,\n    onUploadSuccess: handleUploadSuccess,\n    onSelectImage: handleSelectFeatured\n  }))), __jsx(_Col, {\n    lg: 16,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    style: colStyle\n  }, __jsx(Tabs, {\n    defaultActiveKey: \"1\",\n    onChange: callback,\n    className: \"property-detail-tab\"\n  }, [\"description\", \"neighbourhood\", \"transit\"].map(function (item) {\n    return __jsx(TabPane, {\n      tab: item.charAt(0).toUpperCase() + item.slice(1),\n      key: item\n    }, (state === null || state === void 0 ? void 0 : state[item]) && __jsx(Editor, _extends({}, editorOption, {\n      html: state[item],\n      onEditorStateChange: function onEditorStateChange(html) {\n        return setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, item, html)));\n      }\n    })));\n  }), __jsx(TabPane, {\n    tab: \"Location\",\n    key: \"location\"\n  }, __jsx(Location, {\n    address: state.address,\n    center: {\n      lat: state.lat,\n      lng: state.lng\n    },\n    onPlaceChange: handlePlaceChange,\n    onReset: handlePlaceReset\n  })), __jsx(TabPane, {\n    tab: \"Setting\",\n    key: \"setting\"\n  }, __jsx(Setting, {\n    setting: state,\n    onValuesChange: handleSettingChange\n  })), __jsx(TabPane, {\n    tab: \"Amenity\",\n    key: \"amenity\"\n  }, __jsx(Amenity, {\n    amenities: state.amenities,\n    onToggleOption: handleToggleAmenityOption\n  })), __jsx(TabPane, {\n    tab: \"Bedtype\",\n    key: \"rooms\"\n  }, __jsx(Rooms, {\n    rooms: state.rooms,\n    onRoomChange: handleChangeRoom,\n    onAddRoom: handleAddRoom,\n    onRemoveRoom: handleRemoveRoom,\n    onValuesChange: handleSettingChange\n  })), __jsx(TabPane, {\n    tab: \"Pricing\",\n    key: \"pricing\"\n  }, __jsx(PricingCalendar, {\n    propertyId: propertyId,\n    defaultPrice: state.price\n  })), __jsx(TabPane, {\n    tab: \"Similar Properties\",\n    key: \"similar\"\n  }, __jsx(SimilarProperty, {\n    propertyId: state.id,\n    selectedItems: state.similarProperties,\n    onRowSelection: handleSimilarPropertyChange\n  })))))));\n}","map":null,"metadata":{},"sourceType":"module"}