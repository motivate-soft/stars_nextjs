{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Button from \"antd/lib/button\";\nimport _Input from \"antd/lib/input\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport SignInStyleWrapper from '../../styled/SignIn.styles';\nimport authActions from '../../redux/authentication/actions';\nimport Logo from \"@containers/Guest/Logo/Logo\";\nconst formItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 24\n    }\n  }\n};\nexport default function SignInPage(props) {\n  const dispatch = useDispatch();\n  const router = useRouter();\n\n  const [form] = _Form.useForm();\n\n  const onFinish = values => {\n    const userInfo = {\n      username: values.username,\n      password: values.password\n    };\n    dispatch(authActions.jwtLogin(router, userInfo));\n  };\n\n  return __jsx(SignInStyleWrapper, {\n    className: \"isoSignInPage\"\n  }, __jsx(\"div\", {\n    className: \"isoLoginContentWrapper\"\n  }, __jsx(\"div\", {\n    className: \"isoLoginContent\"\n  }, __jsx(\"div\", {\n    className: \"isoLogoWrapper\"\n  }, __jsx(Link, {\n    href: \"/admin\"\n  }, __jsx(Logo, null))), __jsx(_Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"register\",\n    className: \"isoSignInForm\",\n    onFinish: onFinish,\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    scrollToFirstError: true\n  }), __jsx(_Form.Item, {\n    name: \"username\",\n    className: \"isoInputWrapper\",\n    rules: [// {\n    //   type: 'email',\n    //   message: 'The input is not valid E-mail!',\n    // },\n    {\n      required: true,\n      message: 'Please input your username'\n    }]\n  }, __jsx(_Input, {\n    size: \"large\",\n    placeholder: \"username\"\n  })), __jsx(_Form.Item, {\n    name: \"password\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    hasFeedback: true\n  }, __jsx(_Input.Password, {\n    size: \"large\",\n    placeholder: \"Password\"\n  })), __jsx(_Row, null, __jsx(_Col, {\n    xs: {\n      span: 24\n    },\n    lg: {\n      span: 12\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Signin\")), __jsx(_Col, {\n    xs: {\n      span: 24\n    },\n    lg: {\n      span: 12\n    },\n    className: \"\"\n  }, __jsx(\"div\", {\n    className: \"ant-row-end\"\n  }, __jsx(Link, {\n    href: \"/forgotpassword\"\n  }, __jsx(\"div\", {\n    className: \"isoForgotPass\"\n  }, __jsx(IntlMessages, {\n    id: \"page.signInForgotPass\"\n  }))))))))));\n}","map":null,"metadata":{},"sourceType":"module"}