{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport actions from './actions';\nimport { getCookie } from \"@redux/authentication/auth.utils\";\nimport jwtDecode from \"jwt-decode\";\nimport cookie from \"js-cookie\";\nvar initState = {\n  idToken: null,\n  profile: null,\n  error: null\n}; // if (process.browser) {\n//     if (cookie.get('token') !== null) {\n//         const token = cookie.get('token')\n//         console.log(\"___\", token)\n//         const profile = jwtDecode(token);\n//         initState = {\n//             idToken: token,\n//             profile,\n//             error: null,\n//         };\n//     }\n// }\n\nexport default function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.LOGIN_REQUEST_SUCCESS:\n      Router.replace('/admin');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        idToken: action.token,\n        profile: action.profile\n      });\n\n    case actions.LOGOUT_REQUEST_FAILURE:\n    case actions.LOGIN_REQUEST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        idToken: null,\n        error: action.payload\n      });\n\n    case actions.LOGOUT_REQUEST_SUCCESS:\n      Router.replace('/admin/signin');\n      return initState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/redux/authentication/reducer.js"],"names":["Router","actions","getCookie","jwtDecode","cookie","initState","idToken","profile","error","authReducer","state","action","type","LOGIN_REQUEST_SUCCESS","replace","token","LOGOUT_REQUEST_FAILURE","LOGIN_REQUEST_FAILURE","payload","LOGOUT_REQUEST_SUCCESS"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,OAAO,EAAE,IADG;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAhB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAT,GAAgD;AAAA,MAA3BC,KAA2B,uEAAnBL,SAAmB;AAAA,MAARM,MAAQ;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,OAAO,CAACY,qBAAb;AACIb,MAAAA,MAAM,CAACc,OAAP,CAAe,QAAf;AACA,6CAAWJ,KAAX;AAAkBJ,QAAAA,OAAO,EAAEK,MAAM,CAACI,KAAlC;AAAyCR,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAAzD;;AACJ,SAAKN,OAAO,CAACe,sBAAb;AACA,SAAKf,OAAO,CAACgB,qBAAb;AACI,6CACOP,KADP;AAEIJ,QAAAA,OAAO,EAAE,IAFb;AAGIE,QAAAA,KAAK,EAAEG,MAAM,CAACO;AAHlB;;AAKJ,SAAKjB,OAAO,CAACkB,sBAAb;AACInB,MAAAA,MAAM,CAACc,OAAP,CAAe,eAAf;AACA,aAAOT,SAAP;;AACJ;AACI,aAAOK,KAAP;AAfR;AAiBH","sourcesContent":["import Router from 'next/router';\nimport actions from './actions';\nimport {getCookie} from \"@redux/authentication/auth.utils\";\nimport jwtDecode from \"jwt-decode\";\nimport cookie from \"js-cookie\";\n\nlet initState = {\n    idToken: null,\n    profile: null,\n    error: null,\n};\n\n// if (process.browser) {\n//     if (cookie.get('token') !== null) {\n//         const token = cookie.get('token')\n//         console.log(\"___\", token)\n//         const profile = jwtDecode(token);\n//         initState = {\n//             idToken: token,\n//             profile,\n//             error: null,\n//         };\n//     }\n// }\n\nexport default function authReducer(state = initState, action) {\n    switch (action.type) {\n        case actions.LOGIN_REQUEST_SUCCESS:\n            Router.replace('/admin');\n            return {...state, idToken: action.token, profile: action.profile};\n        case actions.LOGOUT_REQUEST_FAILURE:\n        case actions.LOGIN_REQUEST_FAILURE:\n            return {\n                ...state,\n                idToken: null,\n                error: action.payload,\n            };\n        case actions.LOGOUT_REQUEST_SUCCESS:\n            Router.replace('/admin/signin');\n            return initState;\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}