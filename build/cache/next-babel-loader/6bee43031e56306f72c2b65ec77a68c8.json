{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\SimilarProperty\\\\SimilarProperty.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from \"react\";\nimport clone from \"clone\";\nimport Link from \"next/link\";\nimport Box from \"@iso/components/utility/box\";\nimport HelperText from \"@iso/components/utility/helper-text\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport PageHeader from \"@iso/components/utility/pageHeader\";\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\nimport Button from \"@iso/components/uielements/button\";\nimport Popconfirm from \"@iso/components/Feedback/Popconfirm\";\nimport { DateCell, ImageCell, LinkCell, TextCell } from \"@iso/components/Tables/HelperCells\";\nimport TableWrapper from \"@iso/containers/Tables/AntTables/AntTables.styles\";\nimport categoryActions from \"@redux/categories/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport propertyActions from \"@redux/properties/actions\";\nconst tableColumns = [{\n  title: \"ID\",\n  key: \"id\",\n  width: 100,\n  render: object => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, object.id)\n}, {\n  title: \"Name\",\n  key: \"name\",\n  width: 100,\n  render: object => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, object.name)\n}, {\n  title: \"Address\",\n  key: \"address\",\n  width: 200,\n  render: object => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, object.address)\n}];\nexport default function SimilarProperty(props) {\n  const {\n    selectedItems\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    items,\n    loading\n  } = useSelector(state => state.Properties);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    columns: tableColumns,\n    dataList: items\n  });\n  useEffect(() => {\n    dispatch(propertyActions.getAllProperties());\n  }, []);\n  useEffect(() => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      dataList: items.map(item => _objectSpread({\n        key: item.id\n      }, item))\n    }));\n  }, [items]);\n  const {\n    columns,\n    dataList\n  } = state;\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.id\n    })\n  };\n  return __jsx(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Category\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, (items === null || items === void 0 ? void 0 : items.length) === 0 ? __jsx(HelperText, {\n    text: \"No Properties found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }) : __jsx(\"div\", {\n    className: \"isoPropertyTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, __jsx(Scrollbars, {\n    style: {\n      width: \"100%\",\n      height: \"calc(60vh - 70px)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(TableWrapper, {\n    rowSelection: _objectSpread({\n      type: 'checkbox'\n    }, rowSelection),\n    columns: columns,\n    dataSource: items,\n    className: \"categoryListTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/SimilarProperty/SimilarProperty.js"],"names":["React","useEffect","useState","clone","Link","Box","HelperText","LayoutWrapper","PageHeader","Scrollbars","Button","Popconfirm","DateCell","ImageCell","LinkCell","TextCell","TableWrapper","categoryActions","useDispatch","useSelector","propertyActions","tableColumns","title","key","width","render","object","id","name","address","SimilarProperty","props","selectedItems","dispatch","items","loading","state","Properties","setState","columns","dataList","getAllProperties","map","item","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","length","height","type"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport clone from \"clone\";\r\nimport Link from \"next/link\";\r\nimport Box from \"@iso/components/utility/box\";\r\nimport HelperText from \"@iso/components/utility/helper-text\";\r\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\r\nimport PageHeader from \"@iso/components/utility/pageHeader\";\r\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\r\nimport Button from \"@iso/components/uielements/button\";\r\nimport Popconfirm from \"@iso/components/Feedback/Popconfirm\";\r\nimport {\r\n    DateCell,\r\n    ImageCell,\r\n    LinkCell,\r\n    TextCell,\r\n} from \"@iso/components/Tables/HelperCells\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport TableWrapper from \"@iso/containers/Tables/AntTables/AntTables.styles\";\r\n\r\nimport categoryActions from \"@redux/categories/actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Divider, Radio} from \"antd\";\r\nimport propertyActions from \"@redux/properties/actions\";\r\n\r\n\r\nconst tableColumns = [\r\n    {\r\n        title: \"ID\",\r\n        key: \"id\",\r\n        width: 100,\r\n        render: (object) => <p>{object.id}</p>,\r\n    },\r\n    {\r\n        title: \"Name\",\r\n        key: \"name\",\r\n        width: 100,\r\n        render: (object) => <p>{object.name}</p>,\r\n    },\r\n    {\r\n        title: \"Address\",\r\n        key: \"address\",\r\n        width: 200,\r\n        render: (object) => <p>{object.address}</p>,\r\n    },\r\n];\r\n\r\nexport default function SimilarProperty(props) {\r\n    const {selectedItems} = props\r\n    const dispatch = useDispatch();\r\n\r\n    const {items, loading} = useSelector((state) => state.Properties);\r\n    const [state, setState] = useState({\r\n        columns: tableColumns,\r\n        dataList: items,\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(propertyActions.getAllProperties());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            dataList: items.map(item => ({\r\n                key: item.id,\r\n                ...item,\r\n            })),\r\n        });\r\n    }, [items]);\r\n\r\n    const {columns, dataList} = state;\r\n\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n            console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n        },\r\n        getCheckboxProps: (record) => ({\r\n            disabled: record.name === 'Disabled User',\r\n            // Column configuration not to be checked\r\n            name: record.id,\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <LayoutWrapper>\r\n            <PageHeader>Category</PageHeader>\r\n            <Box>\r\n\r\n                {items?.length === 0 ? (\r\n                    <HelperText text=\"No Properties found\"/>\r\n                ) : (\r\n                    <div className=\"isoPropertyTable\">\r\n                        <Scrollbars\r\n                            style={{width: \"100%\", height: \"calc(60vh - 70px)\"}}\r\n                        >\r\n                            <TableWrapper\r\n                                rowSelection={{\r\n                                    type: 'checkbox',\r\n                                    ...rowSelection,\r\n                                }}\r\n                                columns={columns}\r\n                                dataSource={items}\r\n                                className=\"categoryListTable\"\r\n                            />\r\n                        </Scrollbars>\r\n                    </div>\r\n                )}\r\n            </Box>\r\n        </LayoutWrapper>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}