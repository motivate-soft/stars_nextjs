{"ast":null,"code":"import _DeleteOutlined from \"@ant-design/icons/lib/icons/DeleteOutlined\";\nimport _EditOutlined from \"@ant-design/icons/lib/icons/EditOutlined\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\PropertyList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport clone from \"clone\";\nimport Link from \"next/link\";\nimport Box from \"@iso/components/utility/box\";\nimport HelperText from \"@iso/components/utility/helper-text\";\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\nimport PageHeader from \"@iso/components/utility/pageHeader\";\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\nimport Button from \"@iso/components/uielements/button\";\nimport Popconfirm from \"@iso/components/Feedback/Popconfirm\";\nimport { DateCell, ImageCell, LinkCell, TextCell } from \"@iso/components/Tables/HelperCells\";\nimport TableWrapper from \"@iso/containers/Tables/AntTables/AntTables.styles\";\nimport CardWrapper from \"./PropertyList.styles\";\nimport propertyActions from \"@redux/properties/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst renderCell = (object, type, key) => {\n  const value = object[key];\n\n  switch (type) {\n    case \"ImageCell\":\n      return ImageCell(value);\n\n    case \"DateCell\":\n      return DateCell(value);\n\n    case \"LinkCell\":\n      return LinkCell(value);\n\n    default:\n      return TextCell(value);\n  }\n};\n\nconst tableColumns = [{\n  title: \"Name\",\n  key: \"name\",\n  width: 100,\n  render: object => renderCell(object, \"TextCell\", \"name\")\n}, {\n  title: \"Address\",\n  key: \"address\",\n  width: 100,\n  render: object => renderCell(object, \"TextCell\", \"address\")\n}, {\n  title: \"BookervilleID\",\n  key: \"bookerville_id\",\n  width: 200,\n  render: object => renderCell(object, \"TextCell\", \"bookerville_id\")\n}, {\n  title: \"Updated At\",\n  key: \"updated_date\",\n  width: 200,\n  render: object => renderCell(object, \"DateCell\", \"updated_date\")\n}];\nexport default function PropertyList() {\n  const dispatch = useDispatch();\n  const {\n    items,\n    loading\n  } = useSelector(state => state.Properties);\n  const [state, setState] = React.useState({\n    columns: createcolumns(clone(tableColumns)),\n    dataList: items\n  });\n  useEffect(() => {\n    dispatch(propertyActions.getAllProperties());\n  }, []);\n  useEffect(() => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      dataList: items\n    }));\n  }, [items]);\n  const {\n    columns,\n    dataList\n  } = state;\n\n  function createcolumns(columns) {\n    const optColumn = {\n      title: \"operation\",\n      dataIndex: \"operation\",\n      width: 200,\n      render: (text, record, index) => __jsx(\"div\", {\n        className: \"opt-cell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: `/admin/property?id=${record.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, __jsx(_EditOutlined, {\n        onClick: onEditCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      })), __jsx(Popconfirm, {\n        title: \"Sure to delete?\",\n        onConfirm: () => onDeleteCell(record.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, __jsx(_DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      })))\n    };\n    columns.push(optColumn);\n    return columns;\n  }\n\n  function onEditCell(index) {\n    console.log(\"oneditcell\", index);\n  }\n\n  function onDeleteCell(propertyId) {\n    dispatch(propertyActions.deleteProperty(propertyId)); // setState({ ...state, dataList });\n  }\n\n  return __jsx(LayoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(PageHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Property\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, __jsx(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"isoPropertyTableBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: `property?id=1234`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    className: \"mateAddPropertyBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Add Property\")))), (items === null || items === void 0 ? void 0 : items.length) === 0 ? __jsx(HelperText, {\n    text: \"No Properties found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }) : __jsx(\"div\", {\n    className: \"isoPropertyTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(Scrollbars, {\n    style: {\n      width: \"100%\",\n      height: \"calc(60vh - 70px)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(TableWrapper, {\n    onRow: (record, rowIndex) => {\n      return {\n        onClick: event => {\n          console.log(\"rowClick\", record, rowIndex);\n        }\n      };\n    },\n    columns: columns,\n    dataSource: items,\n    pagination: {\n      pageSize: 5\n    },\n    className: \"propertyListTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/PropertyList.js"],"names":["React","useEffect","clone","Link","Box","HelperText","LayoutWrapper","PageHeader","IntlMessages","Scrollbars","Button","Popconfirm","DateCell","ImageCell","LinkCell","TextCell","TableWrapper","CardWrapper","propertyActions","useDispatch","useSelector","renderCell","object","type","key","value","tableColumns","title","width","render","PropertyList","dispatch","items","loading","state","Properties","setState","useState","columns","createcolumns","dataList","getAllProperties","optColumn","dataIndex","text","record","index","id","onEditCell","onDeleteCell","push","console","log","propertyId","deleteProperty","length","height","rowIndex","onClick","event","pageSize"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport clone from \"clone\";\r\nimport Link from \"next/link\";\r\nimport Box from \"@iso/components/utility/box\";\r\nimport HelperText from \"@iso/components/utility/helper-text\";\r\nimport LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\r\nimport PageHeader from \"@iso/components/utility/pageHeader\";\r\nimport IntlMessages from \"@iso/components/utility/intlMessages\";\r\nimport Scrollbars from \"@iso/components/utility/customScrollBar\";\r\nimport Button from \"@iso/components/uielements/button\";\r\nimport Popconfirm from \"@iso/components/Feedback/Popconfirm\";\r\nimport {\r\n  DateCell,\r\n  ImageCell,\r\n  LinkCell,\r\n  TextCell,\r\n} from \"@iso/components/Tables/HelperCells\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nimport TableWrapper from \"@iso/containers/Tables/AntTables/AntTables.styles\";\r\nimport CardWrapper from \"./PropertyList.styles\";\r\n\r\nimport propertyActions from \"@redux/properties/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst renderCell = (object, type, key) => {\r\n  const value = object[key];\r\n  switch (type) {\r\n    case \"ImageCell\":\r\n      return ImageCell(value);\r\n    case \"DateCell\":\r\n      return DateCell(value);\r\n    case \"LinkCell\":\r\n      return LinkCell(value);\r\n    default:\r\n      return TextCell(value);\r\n  }\r\n};\r\n\r\nconst tableColumns = [\r\n  {\r\n    title: \"Name\",\r\n    key: \"name\",\r\n    width: 100,\r\n    render: (object) => renderCell(object, \"TextCell\", \"name\"),\r\n  },\r\n  {\r\n    title: \"Address\",\r\n    key: \"address\",\r\n    width: 100,\r\n    render: (object) => renderCell(object, \"TextCell\", \"address\"),\r\n  },\r\n  {\r\n    title: \"BookervilleID\",\r\n    key: \"bookerville_id\",\r\n    width: 200,\r\n    render: (object) => renderCell(object, \"TextCell\", \"bookerville_id\"),\r\n  },\r\n  {\r\n    title: \"Updated At\",\r\n    key: \"updated_date\",\r\n    width: 200,\r\n    render: (object) => renderCell(object, \"DateCell\", \"updated_date\"),\r\n  },\r\n];\r\n\r\nexport default function PropertyList() {\r\n  const dispatch = useDispatch();\r\n  const { items, loading } = useSelector((state) => state.Properties);\r\n  const [state, setState] = React.useState({\r\n    columns: createcolumns(clone(tableColumns)),\r\n    dataList: items,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(propertyActions.getAllProperties());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      dataList: items,\r\n    });\r\n  }, [items]);\r\n\r\n  const { columns, dataList } = state;\r\n\r\n  function createcolumns(columns) {\r\n    const optColumn = {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      width: 200,\r\n      render: (text, record, index) => (\r\n        <div className=\"opt-cell\">\r\n          <Link href={`/admin/property?id=${record.id}`}>\r\n            <EditOutlined onClick={onEditCell} />\r\n          </Link>\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => onDeleteCell(record.id)}\r\n          >\r\n            <DeleteOutlined />\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    };\r\n    columns.push(optColumn);\r\n    return columns;\r\n  }\r\n\r\n  function onEditCell(index) {\r\n    console.log(\"oneditcell\", index);\r\n  }\r\n\r\n  function onDeleteCell(propertyId) {\r\n    dispatch(propertyActions.deleteProperty(propertyId));\r\n    // setState({ ...state, dataList });\r\n  }\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <PageHeader>Property</PageHeader>\r\n      <Box>\r\n        <CardWrapper>\r\n          <div className=\"isoPropertyTableBtn\">\r\n            <Link href={`property?id=1234`}>\r\n              <a>\r\n                <Button type=\"primary\" className=\"mateAddPropertyBtn\">\r\n                  Add Property\r\n                </Button>\r\n              </a>\r\n            </Link>\r\n          </div>\r\n          {items?.length === 0 ? (\r\n            <HelperText text=\"No Properties found\" />\r\n          ) : (\r\n            <div className=\"isoPropertyTable\">\r\n              <Scrollbars\r\n                style={{ width: \"100%\", height: \"calc(60vh - 70px)\" }}\r\n              >\r\n                <TableWrapper\r\n                  onRow={(record, rowIndex) => {\r\n                    return {\r\n                      onClick: (event) => {\r\n                        console.log(\"rowClick\", record, rowIndex);\r\n                      },\r\n                    };\r\n                  }}\r\n                  columns={columns}\r\n                  dataSource={items}\r\n                  pagination={{ pageSize: 5 }}\r\n                  className=\"propertyListTable\"\r\n                />\r\n              </Scrollbars>\r\n            </div>\r\n          )}\r\n        </CardWrapper>\r\n      </Box>\r\n    </LayoutWrapper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}