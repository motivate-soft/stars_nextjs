{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport ModalEvents from \"./ModalEvents\";\nimport notification from \"@iso/components/Notification\";\nimport propertyActions from \"@redux/properties/actions\";\nimport { CalendarStyleWrapper } from \"./Calendar.styles\";\nvar Localizer = momentLocalizer(moment);\nvar DragAndDropCalendar = withDragAndDrop(Calendar);\nexport default function PricingCalendar(props) {\n  var propertyId = props.propertyId,\n      defaultPrice = props.defaultPrice;\n\n  var _useState = useState([]),\n      pricingItems = _useState[0],\n      setPricingItems = _useState[1];\n\n  var _useState2 = useState(false),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(null),\n      modalData = _useState3[0],\n      setModalData = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.Properties;\n  }),\n      selectedItem = _useSelector.selectedItem;\n\n  useEffect(function () {\n    getPricingData(propertyId);\n  }, []);\n  useEffect(function () {\n    if (selectedItem.pricingItems) {\n      var newItems = selectedItem.pricingItems.map(function (item, index) {\n        return {\n          price: item.price,\n          allDay: true,\n          start: item.start_date,\n          end: item.end_date\n        };\n      });\n      setPricingItems(newItems);\n      console.log(\"selectedItem\", newItems, pricingItems);\n    }\n  }, [selectedItem]);\n\n  function getPricingData() {\n    return _getPricingData.apply(this, arguments);\n  }\n\n  function _getPricingData() {\n    _getPricingData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(propertyActions.getPriceItems(propertyId));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getPricingData.apply(this, arguments);\n  }\n\n  var handleSlotSelection = function handleSlotSelection(_ref) {\n    var start = _ref.start,\n        end = _ref.end,\n        action = _ref.action;\n    setModalVisible(true);\n    setModalData({\n      price: defaultPrice,\n      start: convertDate(start),\n      end: convertDate(end)\n    });\n  };\n\n  var convertDate = function convertDate(date) {\n    var offset = date.getTimezoneOffset();\n    console.log(\"offset\", offset);\n    var newDate = new Date(date.getTime() - offset * 60 * 1000);\n    return newDate.toISOString().split(\"T\")[0];\n  };\n\n  var handleChangeModalData = function handleChangeModalData(type, modalData) {\n    if (type === \"cancel\") {\n      setModalVisible(false);\n      setModalData(null);\n    } else if (type === \"delete\") {// some logic to delete pricing item\n    } else if (type === \"updateValue\") {\n      console.log(\"updateValue\", modalData);\n      setModalData({\n        price: modalData.price,\n        start: modalData.start,\n        end: modalData.end\n      });\n    } else {\n      dispatch(propertyActions.createPriceItem({\n        start_date: modalData.start,\n        end_date: modalData.end,\n        price: modalData.price,\n        property: propertyId\n      }, dispatch));\n      setModalVisible(false);\n    }\n  };\n\n  return __jsx(CalendarStyleWrapper, {\n    className: \"isomorphicCalendarWrapper\"\n  }, __jsx(ModalEvents, {\n    modalVisible: modalVisible,\n    modalData: modalData,\n    onModalDataChange: handleChangeModalData\n  }), __jsx(Calendar // className=\"isomorphicCalendar\"\n  // selectable\n  // localizer={Localizer}\n  // onView={onView}\n  // defaultView=\"month\"\n  // step={60}\n  , {\n    selectable: true,\n    resizable: true,\n    events: pricingItems,\n    views: [\"month\"],\n    defaultDate: new Date(),\n    defaultView: \"month\",\n    toolbar: true,\n    localizer: Localizer,\n    step: 30,\n    components: {\n      month: {\n        dateHeader: function dateHeader(_ref2) {\n          var date = _ref2.date,\n              label = _ref2.label;\n          var pricingItem = pricingItems.find(function (item) {\n            return moment(date).isBetween(moment(item.start), moment(item.end), null, \"[]\");\n          });\n          return __jsx(\"div\", {\n            className: \"calendar-date-cell\"\n          }, __jsx(\"h4\", null, moment(date).date()), __jsx(\"h6\", null, \"$\", \" \", pricingItem !== undefined ? pricingItem.price : defaultPrice));\n        }\n      }\n    },\n    onSelectSlot: handleSlotSelection\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}