{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Button from \"antd/lib/button\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nimport _Form from \"antd/lib/form\";\nimport _DatePicker from \"antd/lib/date-picker\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Container from \"@iso/ui/UI/Container/Container\";\nimport PhoneInput from 'react-phone-input-2';\nimport _ from \"lodash\";\nimport Box from \"@iso/ui/Box/Box\";\nimport styled from \"styled-components\";\nimport { palette } from \"styled-tools\";\nimport { BACKEND_URL } from \"../../../env-config\";\nimport { notification } from \"@iso/components\";\nimport LocationSearchAutoComplete from \"@components/Guest/ApplicationForm/LocationSearchAutoComplete\";\nimport moment from 'moment';\nconst {\n  RangePicker\n} = _DatePicker;\nconst formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: 'Please select dates!'\n  }]\n};\nconst textConfig = {\n  rules: [{\n    required: true,\n    message: 'Please fill out this field!'\n  }]\n};\nconst ApplicationFormWrapper = styled.div.withConfig({\n  displayName: \"ApplicationForm__ApplicationFormWrapper\",\n  componentId: \"sc-11a2zj-0\"\n})([\".rental-application-block{padding:50px 0 100px;h2{text-align:center;color:\", \"}}.autocomplete-container{width:100%;position:relative;.place-input-wrapper{position:relative;input{width:100%;height:48px;border:2px solid #e4e7ea;border-radius:4px;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out;&:focus,&:active{border:2px solid \", \";box-shadow:none !important;}&::placeholder{font-size:16px;}}svg{position:absolute;right:1rem;top:0.7rem;}}.autocomplete-dropdown-container{position:absolute;top:40px;border-left:1px solid lightgray;border-right:1px solid lightgray;font-size:1rem;z-index:9999;width:100%;.suggestion-item{border-bottom:1px solid lightgray;padding:0.5rem;cursor:pointer;background:#fff;svg{margin:0 10px;}&.active{background-color:lightgray;}}}}.form-action-buttons{display:flex;justify-content:center;button:first-child{margin-right:20px;}}\"], palette('primary', 0), palette('warning', 0));\n\nconst PhoneNumberInput = ({\n  value = {},\n  onChange\n}) => {\n  const triggerChange = changedValue => {\n    console.log(\"PhoneNumberInput\", value, changedValue, onChange);\n    onChange(changedValue);\n  };\n\n  return __jsx(PhoneInput // enableSearch={true}\n  , {\n    country: 'us',\n    value: value,\n    placeholder: `   Your Phone Number`,\n    onChange: (value, country, e, formattedValue) => {\n      triggerChange(formattedValue);\n    },\n    onBlur: () => {},\n    inputStyle: {\n      width: '100%',\n      height: '48px'\n    },\n    isValid: (inputNumber, country, countries) => {\n      return countries.some(country => {\n        return _.startsWith(inputNumber, country.dialCode) || _.startsWith(country.dialCode, inputNumber);\n      });\n    }\n  });\n};\n\nconst AddressInput = ({\n  value = {},\n  onChange\n}) => {\n  const triggerChange = changedValue => {\n    console.log(\"AddressInput\", value, changedValue, onChange);\n    onChange(changedValue);\n  };\n\n  return __jsx(LocationSearchAutoComplete, {\n    value: value,\n    onChange: place => {\n      triggerChange(place.formatted_address);\n    },\n    onReset: () => onChange('')\n  });\n};\n\nfunction ApplicationForm({\n  posts\n}) {\n  const {\n    0: submitted,\n    1: setSubmitted\n  } = useState(false);\n\n  const [form] = _Form.useForm();\n\n  const onFinish = async values => {\n    values.occupancy[0] = moment(values.occupancy[0]).format('YYYY/MM/DD');\n    values.occupancy[1] = moment(values.occupancy[1]).format('YYYY/MM/DD');\n    values.formerlordoccupancy[0] = moment(values.formerlordoccupancy[0]).format('YYYY/MM/DD');\n    values.formerlordoccupancy[1] = moment(values.formerlordoccupancy[1]).format('YYYY/MM/DD');\n\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/users/apply_email`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const data = await res.json();\n\n      if (res.status === 400) {\n        notification('warning', 'Bad request');\n      }\n\n      if (res.ok) {\n        notification('success', 'Your rental application form has been submitted! We will process it and get back to you ASAP!');\n      }\n    } catch (e) {\n      notification('warning', 'Server error while handling booking information');\n    }\n  };\n\n  const onValuesChange = (v1, v2) => {\n    console.log(\"onValuesChange\", v1, v2);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  return __jsx(ApplicationFormWrapper, null, __jsx(Box, {\n    as: \"section\",\n    className: \"main-background-2\"\n  }), __jsx(Box, {\n    as: \"section\",\n    className: \"rental-application-block\"\n  }, __jsx(Container, null, __jsx(\"h2\", null, \"Rental Application Form\"), __jsx(_Form, _extends({\n    form: form,\n    name: \"rental-application-form\",\n    className: \"rental-application-form\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    onValuesChange: onValuesChange\n  }, formItemLayout, {\n    initialValues: {\n      name: '',\n      address: 'asdf',\n      phonenumber: '1',\n      email: '',\n      occupancy: '',\n      people: '',\n      pets: '',\n      contact: '',\n      employer: '',\n      occupation: '',\n      salary: '',\n      reason: '',\n      extradetail: '',\n      lordname: '',\n      lordaddress: '',\n      lordphonenumber: '',\n      formerlordname: '',\n      formerlordaddress: '',\n      formerlordoccupancy: '',\n      formerlordphonenumber: ''\n    }\n  }), __jsx(_Row, {\n    gutter: [32, 32]\n  }, __jsx(_Col, {\n    sm: 24,\n    lg: 12\n  }, __jsx(_Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }]\n  }, __jsx(_Input, {\n    name: \"name\",\n    size: \"large\"\n  }))), __jsx(_Col, {\n    sm: 24,\n    lg: 12\n  }, __jsx(_Form.Item, {\n    label: \"Permanent address\",\n    name: \"address\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }]\n  }, __jsx(AddressInput, null))), __jsx(_Col, {\n    sm: 24,\n    lg: 12\n  }, __jsx(_Form.Item, {\n    label: \"Phone number\",\n    name: \"phonenumber\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'This field is required'\n    }]\n  }, __jsx(PhoneNumberInput, null))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    label: \"Email\",\n    name: \"email\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      type: 'email',\n      message: 'Email is not valid'\n    }, {\n      required: true,\n      message: 'Please input your email'\n    }]\n  }, __jsx(_Input, {\n    placeholder: \"Email\",\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Dates of occupancy (Start Date - End Date)\",\n    name: \"occupancy\",\n    className: \"isoInputWrapper\"\n  }, rangeConfig), __jsx(RangePicker, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"How many adults, and how many children\",\n    name: \"people\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Pets - if yes, please list type and breed\",\n    name: \"pets\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Contact in case of an emergency\",\n    name: \"contact\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Employer? (if student, please list name of university)\",\n    name: \"employer\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Occupation\",\n    name: \"occupation\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Salary (Please state currency)\",\n    name: \"salary\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Reason for your visit\",\n    name: \"reason\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Anything else we should know of\",\n    name: \"extradetail\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 24,\n    sm: 24\n  }, __jsx(\"h5\", null, \"Present Landlord\")), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Name\",\n    name: \"lordname\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Complete Address\",\n    name: \"lordaddress\"\n  }, textConfig), __jsx(AddressInput, null))), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Phone Number\",\n    name: \"lordphonenumber\"\n  }, textConfig), __jsx(PhoneNumberInput, null))), __jsx(_Col, {\n    lg: 24,\n    sm: 24\n  }, __jsx(\"h5\", null, \"Former Landlord\")), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Name\",\n    name: \"formerlordname\"\n  }, textConfig), __jsx(_Input, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Occupancy\",\n    name: \"formerlordoccupancy\"\n  }, rangeConfig), __jsx(RangePicker, {\n    size: \"large\"\n  }))), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Complete Address\",\n    name: \"formerlordaddress\"\n  }, textConfig), __jsx(AddressInput, null))), __jsx(_Col, {\n    lg: 8,\n    sm: 24\n  }, __jsx(_Form.Item, _extends({\n    label: \"Phone Number\",\n    name: \"formerlordphonenumber\"\n  }, textConfig), __jsx(PhoneNumberInput, null))), __jsx(_Col, {\n    sm: 24,\n    className: \"form-action-buttons\"\n  }, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\"\n  }, \"Submit\"), __jsx(_Button, {\n    type: \"default\",\n    size: \"large\",\n    onClick: onReset\n  }, \"Reset\")))))));\n}\n\nexport default ApplicationForm;","map":null,"metadata":{},"sourceType":"module"}