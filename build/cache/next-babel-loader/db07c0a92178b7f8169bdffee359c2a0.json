{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Form from \"antd/lib/form\";\nimport _Switch from \"antd/lib/switch\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\Amenity\\\\Amenity.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { BACKEND_URL } from \"env-config\";\nimport { getCookie } from \"@redux/authentication/auth.utils\";\nimport { indexOf } from \"lodash\";\nconst formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst requiredRule = {\n  required: true,\n  message: \"Please fill this field\"\n};\nexport default function Amenity(props) {\n  const {\n    0: options,\n    1: setOptions\n  } = useState(null);\n  const {\n    amenities,\n    onToggleOption\n  } = props;\n  useEffect(() => {\n    getAmenityData();\n  }, []);\n\n  async function getAmenityData() {\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/accommodation/amenity/`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${getCookie(\"token\")}`\n        }\n      }).then(res => res.json()).then(res => res).catch(error => error);\n      console.log(\"res\", res);\n      setOptions(res);\n    } catch (error) {\n      setOptions([]);\n    }\n  }\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: \"0 20px\",\n      background: \"#fff\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, options && options.length > 0 && options.map((option, index) => __jsx(_Col, {\n    key: index,\n    lg: 12,\n    sm: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(_Form.Item, {\n    label: option.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, __jsx(_Switch, {\n    checked: (amenities === null || amenities === void 0 ? void 0 : amenities.length) > 0 && amenities.indexOf(option.id) > -1,\n    onChange: () => onToggleOption(option.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/Amenity/Amenity.js"],"names":["React","useState","useEffect","BACKEND_URL","getCookie","indexOf","formItemLayout","labelCol","span","wrapperCol","requiredRule","required","message","Amenity","props","options","setOptions","amenities","onToggleOption","getAmenityData","res","fetch","method","headers","Accept","authorization","then","json","catch","error","console","log","onFinish","values","margin","background","padding","length","map","option","index","name","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Switch } from \"antd\";\r\nimport { BACKEND_URL } from \"env-config\";\r\nimport { getCookie } from \"@redux/authentication/auth.utils\";\r\nimport { indexOf } from \"lodash\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nconst requiredRule = {\r\n  required: true,\r\n  message: \"Please fill this field\",\r\n};\r\n\r\nexport default function Amenity(props) {\r\n  const [options, setOptions] = useState(null);\r\n  const { amenities, onToggleOption } = props;\r\n\r\n  useEffect(() => {\r\n    getAmenityData();\r\n  }, []);\r\n\r\n  async function getAmenityData() {\r\n    try {\r\n      const res = await fetch(`${BACKEND_URL}/api/accommodation/amenity/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${getCookie(\"token\")}`,\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => res)\r\n        .catch((error) => error);\r\n      console.log(\"res\", res);\r\n      setOptions(res);\r\n    } catch (error) {\r\n      setOptions([]);\r\n    }\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"0 20px\", background: \"#fff\", padding: 20 }}>\r\n      <Row>\r\n        {options &&\r\n          options.length > 0 &&\r\n          options.map((option, index) => (\r\n            <Col key={index} lg={12} sm={24}>\r\n              <Form.Item label={option.name}>\r\n                <Switch\r\n                  checked={\r\n                    amenities?.length > 0 && amenities.indexOf(option.id) > -1\r\n                  }\r\n                  onChange={() => onToggleOption(option.id)}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n          ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}