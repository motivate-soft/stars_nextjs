{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Row from \"antd/lib/row\";\nimport _Button from \"antd/lib/button\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _Form from \"antd/lib/form\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'react-phone-input-2/lib/bootstrap.css';\nimport styled from \"styled-components\";\nimport { sendContactEmail } from \"@redux/services/guestApi\";\nimport { notification } from \"@iso/components\";\nvar formItemLayout = {\n  wrapperCol: {\n    sm: {\n      span: 24\n    }\n  }\n};\nvar FormWrapper = styled.div.withConfig({\n  displayName: \"ContactForm__FormWrapper\",\n  componentId: \"bb03xb-0\"\n})([\"button{width:240px;}\"]);\n\nfunction ContactForm() {\n  var _Form$useForm = _Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return sendContactEmail(values);\n\n            case 3:\n              res = _context.sent;\n              console.log(\"ContactForm\", res);\n\n              if (!(res.status === \"ok\")) {\n                _context.next = 8;\n                break;\n              }\n\n              notification('success', 'Email has been submitted successfully!');\n              return _context.abrupt(\"return\");\n\n            case 8:\n              notification('warning', 'Sorry, there was an error while submitting your email');\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              notification('warning', 'Sorry, there was an error while submitting your email');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(FormWrapper, null, __jsx(_Form, _extends({}, formItemLayout, {\n    form: form,\n    name: \"contact-info\",\n    className: \"checkout-contact-form\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      message: ''\n    },\n    scrollToFirstError: true\n  }), __jsx(_Row, {\n    gutter: [32, 16]\n  }, __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    name: \"firstName\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your firstName'\n    }]\n  }, __jsx(_Input, {\n    size: \"large\",\n    placeholder: \"First Name\"\n  }))), __jsx(_Col, {\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    name: \"lastName\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your lastName'\n    }]\n  }, __jsx(_Input, {\n    size: \"large\",\n    placeholder: \"Last Name\"\n  }))), __jsx(_Col, {\n    lg: 24,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    name: \"email\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your email'\n    }]\n  }, __jsx(_Input, {\n    size: \"large\",\n    placeholder: \"Email\"\n  }))), __jsx(_Col, {\n    lg: 24,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    name: \"message\",\n    className: \"isoInputWrapper\",\n    rules: [{\n      required: true,\n      message: 'Please input your message'\n    }]\n  }, __jsx(_Input.TextArea, {\n    rows: 5,\n    size: \"large\",\n    placeholder: \"message\"\n  }))), __jsx(_Col, {\n    sm: 24\n  }, __jsx(_Button, {\n    type: \"secondary\",\n    size: \"large\",\n    htmlType: \"submit\"\n  }, \"Submit\")))));\n}\n\nexport default ContactForm;","map":null,"metadata":{},"sourceType":"module"}