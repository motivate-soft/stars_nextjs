{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from \"react\";\nimport Link from 'next/link';\nimport Container from \"@iso/ui/UI/Container/Container\";\nimport Box from \"@iso/ui/Box/Box\";\nimport styled from \"styled-components\";\nimport { palette } from \"styled-tools\";\nimport BookingWidget from \"@components/Guest/Property/Booking/BookingWidget\";\nimport { BookingContext } from \"@context/BookingProvider\";\nimport LoaderComponent from \"@iso/components/utility/loader.style\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { notification } from \"@iso/components\";\nimport { BACKEND_URL, PIXEL_ID } from \"../../../env-config\";\nimport moment from \"moment\";\nimport Router, { useRouter } from \"next/router\";\nimport ReactGA from 'react-ga';\nconst CheckoutPaymentWrapper = styled.div.withConfig({\n  displayName: \"CheckoutPayment__CheckoutPaymentWrapper\",\n  componentId: \"rqryvw-0\"\n})([\".checkout-payment-block{padding:50px 0 100px;h3{color:\", \";}span{font-size:16px;}}\"], palette(\"primary\", 0));\n\nfunction CheckoutPayment(props) {\n  const {\n    0: isPaypalButtonLoading,\n    1: setIsPaypalButtonLoading\n  } = useState(true);\n  const {\n    state,\n    dispatch\n  } = useContext(BookingContext);\n  const router = useRouter();\n\n  const handlePaymentSuccess = (details, data) => {\n    console.log(\"handlePaymentSuccess\", details, data);\n    addPaymentInfo();\n  };\n\n  const handlePaymentError = error => {\n    console.log(\"handlePaymentError\", error);\n    notification('warning', 'Sorry, we couldn\\'t process your payment');\n  };\n\n  const addPaymentInfo = async () => {\n    const bookingData = {\n      bookerville_id: state.bookervilleId,\n      checkin_date: moment(state.checkinDate).format('YYYY-MM-DD'),\n      checkout_date: moment(state.checkoutDate).format('YYYY-MM-DD'),\n      adults: state.adults,\n      children: state.children === '' ? 0 : state.children,\n      property_fee: state.propertyFee,\n      cleaning_fee: state.cleaningFee,\n      refundable_amount: state.refundableAmount,\n      transaction_fee: state.transactionFee,\n      tax: state.tax,\n      total: state.total,\n      guest: {\n        first_name: state.guest.firstName,\n        last_name: state.guest.lastName,\n        email: state.guest.email,\n        phone_number: state.guest.phoneNumber\n      },\n      billing: {\n        country: state.billing.country,\n        state: state.billing.state,\n        city: state.billing.city,\n        street: state.billing.street,\n        zip_code: state.billing.zipCode\n      }\n    };\n\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/accommodation/booking/add_payment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bookingData)\n      });\n      const data = await res.json();\n\n      if (res.status === 400) {\n        notification('warning', 'Bad request');\n      }\n\n      if (res.ok) {\n        ReactGA.event({\n          category: 'ecommerce',\n          action: 'purchase'\n        });\n        import('react-facebook-pixel').then(x => x.default).then(ReactPixel => {\n          console.log(\"initReactPixel\", PIXEL_ID);\n          ReactPixel.init(PIXEL_ID);\n          ReactPixel.track('Purchase', {\n            value: bookingData.total,\n            currency: 'USD'\n          });\n        });\n        dispatch({\n          type: 'UPDATE_BOOKING_INFORMATION',\n          payload: _objectSpread(_objectSpread({}, state), {}, {\n            bookingId: data.booking_id\n          })\n        });\n        router.push('/checkout-confirm');\n      }\n    } catch (e) {\n      notification('warning', 'Server error while handling booking information');\n    }\n  };\n\n  return __jsx(CheckoutPaymentWrapper, null, __jsx(Box, {\n    as: \"section\",\n    className: \"main-background-2\"\n  }), __jsx(Box, {\n    as: \"section\",\n    className: \"checkout-payment-block\"\n  }, __jsx(Container, null, __jsx(_Row, {\n    gutter: 32\n  }, __jsx(_Col, {\n    lg: 14,\n    sm: 24\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginBottom: 30\n    }\n  }, __jsx(\"h3\", null, \"Payment Information\"), __jsx(\"span\", null, \"Step 3 of 3\")), isPaypalButtonLoading ? __jsx(LoaderComponent, null) : __jsx(PayPalButton, {\n    amount: state.total // disableCard\n    ,\n    style: {\n      color: 'blue'\n    },\n    shippingPreference: \"NO_SHIPPING\",\n    onButtonReady: () => {\n      setIsPaypalButtonLoading(false);\n    },\n    onSuccess: (details, data) => {\n      console.log('__TransactionCompletedBy__', details, data, details.payer.name.given_name);\n      handlePaymentSuccess(details, data);\n    },\n    catchError: error => {\n      handlePaymentError(error);\n    } // options={{\n    //     clientId:\n    //         'AVGSCRet9DZ7Ct0uNXIXGlZDO4EIlbnmGty4_jUvnG5Wn0GPTYJudDiB1tqkM2srJGWNZPEE1ZKt4_71'\n    // }}\n    // Sandbox\n    ,\n    options: {\n      clientId: \"AQod8JtRRk59F5HjcGOH7ZNymA7N6s2B1WhXH_g_UCBY40Y1LPSt0fxhdaR2rYmIQPNP2k7uZ5gL95Oe\",\n      currency: \"USD\"\n    }\n  }), __jsx(\"p\", null, __jsx(Link, {\n    href: \"/contact\",\n    target: \"_blank\"\n  }, __jsx(\"span\", {\n    className: \"underlined-link\"\n  }, \"Contact us\")), \"if you want more information about long-term (+30 days) reservations.\")), __jsx(_Col, {\n    lg: 10,\n    sm: 24\n  }, __jsx(BookingWidget, {\n    disabled: true\n  }))))));\n}\n\nexport default CheckoutPayment;","map":null,"metadata":{},"sourceType":"module"}