{"ast":null,"code":"import _ConfigProvider from \"antd/lib/config-provider\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\containers\\\\Guest\\\\GuestThemeProvider.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\nvar toggleAll = appActions.toggleAll;\nexport default function GuestThemeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.LanguageSwitcher.language;\n  }),\n      locale = _useSelector.locale;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.ThemeSwitcher.changeThemes;\n  }),\n      themeName = _useSelector2.themeName;\n\n  var currentAppLocale = AppLocale[locale];\n\n  var _useWindowSize = useWindowSize(),\n      width = _useWindowSize.width,\n      height = _useWindowSize.height;\n\n  React.useEffect(function () {\n    dispatch(toggleAll(width, height));\n  }, [dispatch]);\n  return __jsx(_ConfigProvider, {\n    locale: currentAppLocale.antd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(ThemeProvider, {\n    theme: themes.guestTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, children)));\n}\n\n_s(GuestThemeProvider, \"AVfTeHv0hi3k0ZL/YPpjlWCwAII=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useWindowSize];\n});\n\n_c = GuestThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuestThemeProvider\");","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/containers/Guest/GuestThemeProvider.js"],"names":["React","IntlProvider","useSelector","useDispatch","ThemeProvider","themes","AppLocale","useWindowSize","appActions","toggleAll","GuestThemeProvider","children","dispatch","state","LanguageSwitcher","language","locale","ThemeSwitcher","changeThemes","themeName","currentAppLocale","width","height","useEffect","antd","messages","guestTheme"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;IAEQC,S,GAAcD,U,CAAdC,S;AAER,eAAe,SAASC,kBAAT,OAA0C;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACvD,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADuD,qBAEpCD,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACC,gBAAN,CAAuBC,QAA3B;AAAA,GAAN,CAFyB;AAAA,MAE/CC,MAF+C,gBAE/CA,MAF+C;;AAAA,sBAGjCd,WAAW,CAAC,UAAAW,KAAK;AAAA,WAAIA,KAAK,CAACI,aAAN,CAAoBC,YAAxB;AAAA,GAAN,CAHsB;AAAA,MAG/CC,SAH+C,iBAG/CA,SAH+C;;AAIvD,MAAMC,gBAAgB,GAAGd,SAAS,CAACU,MAAD,CAAlC;;AAJuD,uBAK7BT,aAAa,EALgB;AAAA,MAK/Cc,KAL+C,kBAK/CA,KAL+C;AAAA,MAKxCC,MALwC,kBAKxCA,MALwC;;AAOvDtB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,YAAM;AACpBX,IAAAA,QAAQ,CAACH,SAAS,CAACY,KAAD,EAAQC,MAAR,CAAV,CAAR;AACD,GAFD,EAEG,CAACV,QAAD,CAFH;AAGA,SACI;AAAgB,IAAA,MAAM,EAAEQ,gBAAgB,CAACI,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACI,IAAA,MAAM,EAAEJ,gBAAgB,CAACJ,MAD7B;AAEI,IAAA,QAAQ,EAAEI,gBAAgB,CAACK,QAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEpB,MAAM,CAACqB,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Cf,QAA1C,CAJF,CADF,CADJ;AAUD;;GApBuBD,kB;UACLP,W,EACED,W,EACGA,W,EAEIK,a;;;KALJG,kB","sourcesContent":["import React from 'react';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport themes from '@iso/config/theme/theme.config';\nimport AppLocale from '@iso/config/translation';\nimport useWindowSize from '@iso/lib/hooks/useWindowSize';\nimport appActions from '@iso/redux/app/actions';\n\nconst { toggleAll } = appActions;\n\nexport default function GuestThemeProvider({ children }) {\n  const dispatch = useDispatch();\n  const { locale } = useSelector(state => state.LanguageSwitcher.language);\n  const { themeName } = useSelector(state => state.ThemeSwitcher.changeThemes);\n  const currentAppLocale = AppLocale[locale];\n  const { width, height } = useWindowSize();\n\n  React.useEffect(() => {\n    dispatch(toggleAll(width, height));\n  }, [dispatch]);\n  return (\n      <ConfigProvider locale={currentAppLocale.antd}>\n        <IntlProvider\n            locale={currentAppLocale.locale}\n            messages={currentAppLocale.messages}\n        >\n          <ThemeProvider theme={themes.guestTheme}>{children}</ThemeProvider>\n        </IntlProvider>\n      </ConfigProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}