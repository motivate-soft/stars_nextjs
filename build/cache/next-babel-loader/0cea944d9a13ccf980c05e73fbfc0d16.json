{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Actions from '@iso/redux/themeSwitcher/actions';\nimport Switcher from '@iso/components/ThemeSwitcher/ThemeSwitcher';\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher';\nimport Themes from './config';\nimport bucketSVG from '@iso/assets/images/icon/bucket.svg';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport ThemeSwitcherStyle from './ThemeSwitcher.styles';\nconst {\n  switchActivation,\n  changeTheme\n} = Actions;\nexport default function ThemeSwitcher() {\n  const {\n    isActivated,\n    topbarTheme,\n    sidebarTheme,\n    layoutTheme\n  } = useSelector(state => state.ThemeSwitcher);\n  const dispatch = useDispatch();\n  const styleButton = {\n    background: sidebarTheme.buttonColor\n  };\n  return __jsx(ThemeSwitcherStyle, {\n    className: isActivated ? 'isoThemeSwitcher active' : 'isoThemeSwitcher'\n  }, __jsx(\"div\", {\n    className: \"componentTitleWrapper\",\n    style: styleButton\n  }, __jsx(\"h3\", {\n    className: \"componentTitle\"\n  }, __jsx(IntlMessages, {\n    id: \"themeSwitcher.settings\"\n  }))), __jsx(\"div\", {\n    className: \"SwitcherBlockWrapper\"\n  }, __jsx(Switcher, {\n    config: Themes.sidebarTheme,\n    changeTheme: (attr, theme) => dispatch(changeTheme(attr, theme)),\n    selectedId: sidebarTheme.themeName\n  }), __jsx(Switcher, {\n    config: Themes.topbarTheme,\n    changeTheme: (attr, theme) => dispatch(changeTheme(attr, theme)),\n    selectedId: topbarTheme.themeName\n  }), __jsx(Switcher, {\n    config: Themes.layoutTheme,\n    changeTheme: (attr, theme) => dispatch(changeTheme(attr, theme)),\n    selectedId: layoutTheme.themeName\n  }), __jsx(LanguageSwitcher, null)), __jsx(\"button\", {\n    type: \"primary\",\n    className: \"switcherToggleBtn\",\n    style: styleButton,\n    onClick: () => {\n      dispatch(switchActivation());\n    }\n  }, __jsx(\"img\", {\n    src: bucketSVG,\n    alt: \"bucket\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}