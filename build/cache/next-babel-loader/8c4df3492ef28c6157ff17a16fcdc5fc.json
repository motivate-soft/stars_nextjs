{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\pages\\\\admin\\\\property.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Head from \"next/head\";\nimport DashboardLayout from \"../../containers/Admin/DashboardLayout/DashboardLayout\";\nimport PropertyList from \"@components/Admin/Property/PropertyList\";\nimport { withRouter } from \"next/router\";\nimport { withAuthSync } from \"@redux/authentication/auth.utils\";\nimport SingleProperty from \"@components/Admin/Property/SingleProperty\";\n\nvar getPropertyId = function getPropertyId(props) {\n  try {\n    var router = props.router;\n    return {\n      propertyId: router.query.id,\n      redirectPath: router.pathname\n    };\n  } catch (e) {}\n};\n\nexport default _c3 = withRouter(_c2 = withAuthSync(_c = function _c(props) {\n  var _getPropertyId = getPropertyId(props),\n      propertyId = _getPropertyId.propertyId,\n      redirectPath = _getPropertyId.redirectPath;\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Property listing\")), __jsx(DashboardLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, propertyId ? __jsx(SingleProperty, {\n    propertyId: propertyId,\n    redirectPath: redirectPath,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }) : __jsx(PropertyList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n}));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"%default%$withRouter$withAuthSync\");\n$RefreshReg$(_c2, \"%default%$withRouter\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/pages/admin/property.js"],"names":["React","Head","DashboardLayout","PropertyList","withRouter","withAuthSync","SingleProperty","getPropertyId","props","router","propertyId","query","id","redirectPath","pathname","e"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAI;AAAA,QACMC,MADN,GACiBD,KADjB,CACMC,MADN;AAEF,WAAO;AACLC,MAAAA,UAAU,EAAED,MAAM,CAACE,KAAP,CAAaC,EADpB;AAELC,MAAAA,YAAY,EAAEJ,MAAM,CAACK;AAFhB,KAAP;AAID,GAND,CAME,OAAOC,CAAP,EAAU,CAAE;AACf,CARD;;AAUA,qBAAeX,UAAU,OACvBC,YAAY,MAAC,YAACG,KAAD,EAAW;AAAA,uBACaD,aAAa,CAACC,KAAD,CAD1B;AAAA,MAChBE,UADgB,kBAChBA,UADgB;AAAA,MACJG,YADI,kBACJA,YADI;;AAGtB,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAIE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,GACT,MAAC,cAAD;AACE,IAAA,UAAU,EAAEA,UADd;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAMT,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAJF,CADF;AAiBD,CApBW,CADW,CAAzB","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport DashboardLayout from \"../../containers/Admin/DashboardLayout/DashboardLayout\";\r\nimport PropertyList from \"@components/Admin/Property/PropertyList\";\r\nimport { withRouter } from \"next/router\";\r\nimport { withAuthSync } from \"@redux/authentication/auth.utils\";\r\nimport SingleProperty from \"@components/Admin/Property/SingleProperty\";\r\n\r\nconst getPropertyId = (props) => {\r\n  try {\r\n    const { router } = props;\r\n    return {\r\n      propertyId: router.query.id,\r\n      redirectPath: router.pathname,\r\n    };\r\n  } catch (e) {}\r\n};\r\n\r\nexport default withRouter(\r\n  withAuthSync((props) => {\r\n    let { propertyId, redirectPath } = getPropertyId(props);\r\n\r\n    return (\r\n      <>\r\n        <Head>\r\n          <title>Property listing</title>\r\n        </Head>\r\n        <DashboardLayout>\r\n          {propertyId ? (\r\n            <SingleProperty\r\n              propertyId={propertyId}\r\n              redirectPath={redirectPath}\r\n            />\r\n          ) : (\r\n            <PropertyList />\r\n          )}\r\n        </DashboardLayout>\r\n      </>\r\n    );\r\n  })\r\n);\r\n"]},"metadata":{},"sourceType":"module"}