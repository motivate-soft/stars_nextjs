{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\context\\\\SearchProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from 'react';\nexport const SearchContext = /*#__PURE__*/React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n}\n\nexport const SearchProvider = ({\n  children,\n  query\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, query);\n  return __jsx(SearchContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/context/SearchProvider.js"],"names":["React","useReducer","SearchContext","createContext","reducer","state","action","type","payload","SearchProvider","children","query","dispatch"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,MAAMC,aAAa,gBAAGF,KAAK,CAACG,aAAN,EAAtB;;AAEP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,6CAAYF,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH;;AAED,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACnD,QAAM;AAAA,OAACN,KAAD;AAAA,OAAQO;AAAR,MAAoBX,UAAU,CAACG,OAAD,EAAUO,KAAV,CAApC;AACA,SACI,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAEN,MAAAA,KAAF;AAASO,MAAAA;AAAT,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QADL,CADJ;AAKH,CAPM","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nexport const SearchContext = React.createContext();\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'UPDATE_QUERY':\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const SearchProvider = ({ children, query }) => {\r\n    const [state, dispatch] = useReducer(reducer, query);\r\n    return (\r\n        <SearchContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </SearchContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}