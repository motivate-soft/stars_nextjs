{"ast":null,"code":"import { all, takeEvery, fork, takeLatest, call, put } from \"redux-saga/effects\";\nimport actions from \"./actions\";\nimport { notification } from \"@iso/components\";\nimport postApi from \"../../service/postApi\";\nexport function* getAllPosts() {\n  yield takeLatest(actions.GET_ALL_POSTS_REQUEST, function* () {\n    try {\n      const res = yield call(postApi.getAll);\n      yield put({\n        type: actions.GET_ALL_POSTS_SUCCESS,\n        items: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_ALL_POSTS_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* getPost() {\n  yield takeEvery(actions.GET_POST_REQUEST, function* (payload) {\n    try {\n      const res = yield call(postApi.getOne, payload.postId);\n      yield put({\n        type: actions.GET_POST_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_POST_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* addPost() {\n  yield takeEvery(actions.ADD_POST_REQUEST, function* (payload) {\n    try {\n      const res = yield call(postApi.add, payload.post);\n      notification('success', 'New post created');\n      yield put({\n        type: actions.ADD_POST_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.ADD_POST_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* updatePost() {\n  yield takeEvery(actions.UPDATE_POST_REQUEST, function* (payload) {\n    try {\n      const res = yield call(postApi.update, payload.post);\n      notification('success', 'Post has been updated successfully');\n      yield put({\n        type: actions.UPDATE_POST_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.UPDATE_POST_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* deletePost() {\n  yield takeEvery(actions.DELETE_POST_REQUEST, function* (payload) {\n    try {\n      yield call(postApi.delete, payload.postId);\n      notification('warning', 'Post has been deleted successfully');\n      yield put({\n        type: actions.DELETE_POST_SUCCESS,\n        postId: payload.postId\n      });\n    } catch (error) {\n      notification('warning', error.message);\n      yield put({\n        type: actions.DELETE_POST_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([call(getAllPosts), fork(getPost), fork(addPost), fork(updatePost), fork(deletePost)]);\n}","map":null,"metadata":{},"sourceType":"module"}