{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\Room\\\\Rooms.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { BACKEND_URL } from \"env-config\";\nimport { getCookie } from \"@redux/authentication/auth.utils\";\nimport Button from \"@iso/components/uielements/button\";\nimport Room from \"./Room\";\nconst formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst requiredRule = {\n  required: true,\n  message: \"Please fill this field\"\n};\nexport default function Rooms(props) {\n  const {\n    rooms,\n    onRoomChange,\n    onAddRoom,\n    onRemoveRoom\n  } = props;\n  return __jsx(\"div\", {\n    style: {\n      margin: \"0 20px\",\n      background: \"#fff\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: onAddRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Add new room\"), rooms && rooms.length > 0 && rooms.filter(room => room.bedType !== \"\").map((room, index) => __jsx(Room, {\n    key: index,\n    room: room,\n    onRoomChange: onRoomChange,\n    onRemoveRoom: onRemoveRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/Room/Rooms.js"],"names":["React","useState","useEffect","BACKEND_URL","getCookie","Button","Room","formItemLayout","labelCol","span","wrapperCol","requiredRule","required","message","Rooms","props","rooms","onRoomChange","onAddRoom","onRemoveRoom","margin","background","padding","length","filter","room","bedType","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADW;AAIrBC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJS,CAAvB;AASA,MAAME,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,IADS;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA;AAAlC,MAAmDJ,KAAzD;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,MAAM,EAAE,QAAV;AAAoBC,MAAAA,UAAU,EAAE,MAAhC;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEJ,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIGF,KAAK,IACJA,KAAK,CAACO,MAAN,GAAe,CADhB,IAECP,KAAK,CACFQ,MADH,CACWC,IAAD,IAAUA,IAAI,CAACC,OAAL,KAAiB,EADrC,EAEGC,GAFH,CAEO,CAACF,IAAD,EAAOG,KAAP,KACH,MAAC,IAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,YAAY,EAAER,YAHhB;AAIE,IAAA,YAAY,EAAEE,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CANJ,CADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Switch } from \"antd\";\r\nimport { BACKEND_URL } from \"env-config\";\r\nimport { getCookie } from \"@redux/authentication/auth.utils\";\r\nimport Button from \"@iso/components/uielements/button\";\r\nimport Room from \"./Room\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 24,\r\n  },\r\n  wrapperCol: {\r\n    span: 24,\r\n  },\r\n};\r\n\r\nconst requiredRule = {\r\n  required: true,\r\n  message: \"Please fill this field\",\r\n};\r\n\r\nexport default function Rooms(props) {\r\n  const { rooms, onRoomChange, onAddRoom, onRemoveRoom } = props;\r\n\r\n  return (\r\n    <div style={{ margin: \"0 20px\", background: \"#fff\", padding: 20 }}>\r\n      <Button type=\"primary\" onClick={onAddRoom}>\r\n        Add new room\r\n      </Button>\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms\r\n          .filter((room) => room.bedType !== \"\")\r\n          .map((room, index) => (\r\n            <Room\r\n              key={index}\r\n              room={room}\r\n              onRoomChange={onRoomChange}\r\n              onRemoveRoom={onRemoveRoom}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}