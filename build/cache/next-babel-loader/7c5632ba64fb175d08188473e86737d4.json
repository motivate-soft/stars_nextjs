{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\containers\\\\Admin\\\\Topbar\\\\Topbar.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport appActions from '@iso/redux/app/actions';\nimport TopbarNotification from './TopbarNotification';\nimport TopbarMessage from './TopbarMessage';\nimport TopbarSearch from './TopbarSearch';\nimport TopbarUser from './TopbarUser';\nimport TopbarAddtoCart from './TopbarAddToCart';\nimport TopbarWrapper from './Topbar.styles';\nimport { TopbarMenuIcon } from '@iso/config/icon.config';\nconst {\n  Header\n} = _Layout;\nconst {\n  toggleCollapsed\n} = appActions;\n\nclass Topbar extends Component {\n  render() {\n    const {\n      toggleCollapsed,\n      url,\n      customizedTheme,\n      locale\n    } = this.props;\n    const collapsed = this.props.collapsed && !this.props.openDrawer;\n    const styling = {\n      background: customizedTheme.backgroundColor,\n      position: 'fixed',\n      width: '100%',\n      height: 70\n    };\n    return __jsx(TopbarWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, __jsx(Header, {\n      style: styling,\n      className: collapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"isoLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      className: collapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen',\n      style: {\n        color: customizedTheme.textColor\n      },\n      onClick: toggleCollapsed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, __jsx(TopbarMenuIcon, {\n      size: 24,\n      color: customizedTheme.textColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }))), __jsx(\"ul\", {\n      className: \"isoRight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(\"li\", {\n      onClick: () => this.setState({\n        selectedItem: 'user'\n      }),\n      className: \"isoUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(TopbarUser, {\n      locale: locale,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default connect(state => _objectSpread(_objectSpread({}, state.App), {}, {\n  locale: state.LanguageSwitcher.language.locale,\n  customizedTheme: state.ThemeSwitcher.topbarTheme\n}), {\n  toggleCollapsed\n})(Topbar);","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/containers/Admin/Topbar/Topbar.js"],"names":["React","Component","connect","appActions","TopbarNotification","TopbarMessage","TopbarSearch","TopbarUser","TopbarAddtoCart","TopbarWrapper","TopbarMenuIcon","Header","toggleCollapsed","Topbar","render","url","customizedTheme","locale","props","collapsed","openDrawer","styling","background","backgroundColor","position","width","height","color","textColor","setState","selectedItem","state","App","LanguageSwitcher","language","ThemeSwitcher","topbarTheme"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBT,UAA5B;;AAEA,MAAMU,MAAN,SAAqBZ,SAArB,CAA+B;AAC7Ba,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA,eAAF;AAAmBG,MAAAA,GAAnB;AAAwBC,MAAAA,eAAxB;AAAyCC,MAAAA;AAAzC,QAAoD,KAAKC,KAA/D;AACA,UAAMC,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,IAAwB,CAAC,KAAKD,KAAL,CAAWE,UAAtD;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,UAAU,EAAEN,eAAe,CAACO,eADd;AAEdC,MAAAA,QAAQ,EAAE,OAFI;AAGdC,MAAAA,KAAK,EAAE,MAHO;AAIdC,MAAAA,MAAM,EAAE;AAJM,KAAhB;AAMA,WACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAEL,OADT;AAEE,MAAA,SAAS,EACPF,SAAS,GAAG,4BAAH,GAAkC,kBAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EACPA,SAAS,GAAG,0BAAH,GAAgC,qBAF7C;AAIE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAEX,eAAe,CAACY;AAAzB,OAJT;AAKE,MAAA,OAAO,EAAEhB,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,cAAD;AAAgB,MAAA,IAAI,EAAE,EAAtB;AAA0B,MAAA,KAAK,EAAEI,eAAe,CAACY,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CANF,EAkBE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAd,CADjB;AAEE,MAAA,SAAS,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEb,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAlBF,CADF,CADF;AA+BD;;AAzC4B;;AA4C/B,eAAef,OAAO,CACnB6B,KAAD,oCACKA,KAAK,CAACC,GADX;AAEEf,EAAAA,MAAM,EAAEc,KAAK,CAACE,gBAAN,CAAuBC,QAAvB,CAAgCjB,MAF1C;AAGED,EAAAA,eAAe,EAAEe,KAAK,CAACI,aAAN,CAAoBC;AAHvC,EADoB,EAMpB;AAAExB,EAAAA;AAAF,CANoB,CAAP,CAObC,MAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport appActions from '@iso/redux/app/actions';\r\nimport TopbarNotification from './TopbarNotification';\r\nimport TopbarMessage from './TopbarMessage';\r\nimport TopbarSearch from './TopbarSearch';\r\nimport TopbarUser from './TopbarUser';\r\nimport TopbarAddtoCart from './TopbarAddToCart';\r\nimport TopbarWrapper from './Topbar.styles';\r\nimport { TopbarMenuIcon } from '@iso/config/icon.config';\r\n\r\nconst { Header } = Layout;\r\nconst { toggleCollapsed } = appActions;\r\n\r\nclass Topbar extends Component {\r\n  render() {\r\n    const { toggleCollapsed, url, customizedTheme, locale } = this.props;\r\n    const collapsed = this.props.collapsed && !this.props.openDrawer;\r\n    const styling = {\r\n      background: customizedTheme.backgroundColor,\r\n      position: 'fixed',\r\n      width: '100%',\r\n      height: 70,\r\n    };\r\n    return (\r\n      <TopbarWrapper>\r\n        <Header\r\n          style={styling}\r\n          className={\r\n            collapsed ? 'isomorphicTopbar collapsed' : 'isomorphicTopbar'\r\n          }\r\n        >\r\n          <div className=\"isoLeft\">\r\n            <button\r\n              className={\r\n                collapsed ? 'triggerBtn menuCollapsed' : 'triggerBtn menuOpen'\r\n              }\r\n              style={{ color: customizedTheme.textColor }}\r\n              onClick={toggleCollapsed}\r\n            >\r\n              <TopbarMenuIcon size={24} color={customizedTheme.textColor} />\r\n            </button>\r\n          </div>\r\n\r\n          <ul className=\"isoRight\">\r\n            <li\r\n              onClick={() => this.setState({ selectedItem: 'user' })}\r\n              className=\"isoUser\"\r\n            >\r\n              <TopbarUser locale={locale} />\r\n            </li>\r\n          </ul>\r\n        </Header>\r\n      </TopbarWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    ...state.App,\r\n    locale: state.LanguageSwitcher.language.locale,\r\n    customizedTheme: state.ThemeSwitcher.topbarTheme,\r\n  }),\r\n  { toggleCollapsed }\r\n)(Topbar);\r\n"]},"metadata":{},"sourceType":"module"}