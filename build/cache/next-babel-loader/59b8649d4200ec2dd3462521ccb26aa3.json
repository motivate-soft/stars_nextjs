{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport Router from 'next/router';\nimport nextCookie from 'next-cookies';\nimport cookie from 'js-cookie';\nimport jwtDecode from \"jwt-decode\";\nexport var checkExpirity = function checkExpirity(token) {\n  if (!token) {\n    return {\n      error: 'not matched'\n    };\n  }\n\n  try {\n    var profile = jwtDecode(token);\n    var expiredAt = profile.exp * 1000;\n\n    if (expiredAt > new Date().getTime()) {\n      return {\n        profile: profile,\n        token: token,\n        expiredAt: new Date(expiredAt)\n      };\n    } else {\n      return {\n        error: 'Token expired'\n      };\n    }\n  } catch (e) {\n    return {\n      error: 'Server Error'\n    };\n  }\n};\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport var getCookie = function getCookie(key, req) {\n  return true ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nvar getCookieFromBrowser = function getCookieFromBrowser(key) {\n  return cookie.get(key);\n};\n\nvar getCookieFromServer = function getCookieFromServer(key, req) {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  var rawCookie = req.headers.cookie.split(';').find(function (c) {\n    return c.trim().startsWith(\"\".concat(key, \"=\"));\n  });\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n}; // export const login = ({token}) => {\n//     cookie.set('token', token, {expires: 1});\n//     Router.push('/admin');\n// };\n\n\nexport var auth = function auth(ctx) {\n  var _nextCookie = nextCookie(ctx),\n      token = _nextCookie.token;\n  /*\n   * If `ctx.req` is available it means we are on the server.\n   * Additionally if there's no token it means the user is not logged in.\n   */\n\n\n  if (ctx.req && !token) {\n    ctx.res.writeHead(302, {\n      Location: '/admin/signin'\n    });\n    ctx.res.end();\n  } // We already checked for server. This should only happen on client.\n\n\n  if (!token) {\n    Router.push('/admin/signin');\n  }\n\n  return token;\n};\nexport var logout = function logout() {\n  cookie.remove('token'); // to support logging out from all windows\n\n  window.localStorage.setItem('logout', Date.now());\n  Router.push('/admin/signin');\n};\nexport var withAuthSync = function withAuthSync(WrappedComponent) {\n  var Wrapper = function Wrapper(props) {\n    var syncLogout = function syncLogout(event) {\n      if (event.key === 'logout') {\n        console.log('logged out from storage!');\n        Router.push('/admin/signin');\n      }\n    };\n\n    useEffect(function () {\n      window.addEventListener('storage', syncLogout);\n      return function () {\n        window.removeEventListener('storage', syncLogout);\n        window.localStorage.removeItem('logout');\n      };\n    }, [null]);\n    return __jsx(WrappedComponent, props);\n  };\n\n  Wrapper.getInitialProps = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n      var token, componentProps;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = auth(ctx);\n              _context.t0 = WrappedComponent.getInitialProps;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return WrappedComponent.getInitialProps(ctx);\n\n            case 5:\n              _context.t0 = _context.sent;\n\n            case 6:\n              componentProps = _context.t0;\n              return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, componentProps), {}, {\n                token: token\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return Wrapper;\n};","map":null,"metadata":{},"sourceType":"module"}