{"ast":null,"code":"import _CloseOutlined from \"@ant-design/icons/lib/icons/CloseOutlined\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\Location\\\\LocationSearchAutoComplete.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport Input from \"@iso/components/uielements/input\";\nimport { FaMapPin } from \"react-icons/fa\";\n\nclass LocationSearchAutoComplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", address => {\n      this.setState({\n        address\n      });\n    });\n\n    _defineProperty(this, \"handleSelect\", (address, placeId) => {\n      this.setState({\n        address\n      });\n      const request = {\n        placeId: placeId,\n        fields: [\"name\", \"geometry\", \"address_components\", \"formatted_address\", \"icon\", \"id\", \"name\", \"place_id\", \"reference\", \"scope\", \"types\", \"url\", \"utc_offset\", \"vicinity\"]\n      };\n      this.placesService.getDetails(request, (place, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          this.props.onPlaceChanged(place);\n          console.log(\"placesService\", place.geometry.location.lat(), place.geometry.location.lng());\n        }\n      });\n    });\n\n    this.state = {\n      address: \"\"\n    }; // if (typeof window !== 'undefined'){\n    //\n    // }\n\n    if (false) {\n      this.placesService = new window.google.maps.places.PlacesService(document.createElement(\"div\"));\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n    this.setState({\n      address: nextProps.address\n    });\n  }\n\n  render() {\n    const {\n      placeholder,\n      name\n    } = this.props;\n    return __jsx(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => __jsx(\"div\", {\n      className: \"autocomplete-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"place-input-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, __jsx(Input, _extends({}, getInputProps({\n      // name: name ? name : \"address\",\n      placeholder: placeholder ? placeholder : \"Search for address...\"\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    })), __jsx(_CloseOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, loading && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, \"Loading...\"), suggestions.map((suggestion, index) => {\n      const className = suggestion.active ? \"suggestion-item active\" : \"suggestion-item\";\n      return __jsx(\"div\", _extends({\n        key: index\n      }, getSuggestionItemProps(suggestion, {\n        className\n      }), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }), __jsx(FaMapPin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 41\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, suggestion.description));\n    }))));\n  }\n\n}\n\nexport default LocationSearchAutoComplete;","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/Location/LocationSearchAutoComplete.js"],"names":["React","PlacesAutocomplete","Input","FaMapPin","LocationSearchAutoComplete","Component","constructor","props","address","setState","placeId","request","fields","placesService","getDetails","place","status","window","google","maps","places","PlacesServiceStatus","OK","onPlaceChanged","console","log","geometry","location","lat","lng","state","PlacesService","document","createElement","handleChange","bind","handleSelect","UNSAFE_componentWillReceiveProps","nextProps","nextContext","render","placeholder","name","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","index","className","active","description"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\nimport Input from \"@iso/components/uielements/input\";\r\nimport {FaMapPin} from \"react-icons/fa\";\r\n\r\nclass LocationSearchAutoComplete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {address: \"\"};\r\n        // if (typeof window !== 'undefined'){\r\n        //\r\n        // }\r\n        if (process.browser) {\r\n            this.placesService = new window.google.maps.places.PlacesService(\r\n                document.createElement(\"div\")\r\n            );\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n        this.setState({address: nextProps.address});\r\n    }\r\n\r\n    handleChange = (address) => {\r\n        this.setState({address});\r\n    };\r\n\r\n    handleSelect = (address, placeId) => {\r\n        this.setState({address});\r\n\r\n        const request = {\r\n            placeId: placeId,\r\n            fields: [\r\n                \"name\",\r\n                \"geometry\",\r\n                \"address_components\",\r\n                \"formatted_address\",\r\n                \"icon\",\r\n                \"id\",\r\n                \"name\",\r\n                \"place_id\",\r\n                \"reference\",\r\n                \"scope\",\r\n                \"types\",\r\n                \"url\",\r\n                \"utc_offset\",\r\n                \"vicinity\",\r\n            ],\r\n        };\r\n\r\n        this.placesService.getDetails(request, (place, status) => {\r\n            if (status === window.google.maps.places.PlacesServiceStatus.OK) {\r\n                this.props.onPlaceChanged(place);\r\n                console.log(\"placesService\", place.geometry.location.lat(), place.geometry.location.lng());\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {placeholder, name} = this.props\r\n        return (\r\n            <PlacesAutocomplete\r\n                value={this.state.address}\r\n                onChange={this.handleChange}\r\n                onSelect={this.handleSelect}\r\n            >\r\n                {({getInputProps, suggestions, getSuggestionItemProps, loading}) => (\r\n                    <div className=\"autocomplete-container\">\r\n                        <div className=\"place-input-wrapper\">\r\n                            <Input\r\n                                {...getInputProps({\r\n                                    // name: name ? name : \"address\",\r\n                                    placeholder: placeholder ? placeholder : \"Search for address...\",\r\n                                })}\r\n                            />\r\n                            <CloseOutlined/>\r\n                        </div>\r\n                        <div className=\"autocomplete-dropdown-container\">\r\n                            {loading && <div>Loading...</div>}\r\n                            {suggestions.map((suggestion, index) => {\r\n                                const className = suggestion.active\r\n                                    ? \"suggestion-item active\"\r\n                                    : \"suggestion-item\";\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                        })}\r\n                                    >\r\n                                        <FaMapPin/>\r\n                                        <span>{suggestion.description}</span>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PlacesAutocomplete>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LocationSearchAutoComplete;\r\n"]},"metadata":{},"sourceType":"module"}