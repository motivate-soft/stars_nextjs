{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Button from \"antd/lib/button\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\components\\\\Admin\\\\Property\\\\FeaturedImage\\\\FeaturedImage.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Modal from \"@iso/components/Feedback/Modal\";\nimport React, { useState } from \"react\";\nimport Tabs, { TabPane } from \"@iso/components/uielements/tabs\";\nimport DropzoneWrapper from \"../Dropzone/Dropzone.styles\";\nimport Dropzone from \"../Dropzone/Dropzone\";\nimport classNames from \"classnames\";\nimport GalleryWrapper from \"../Gallery/Gallery.styles\";\nimport CropImage from \"@components/Admin/Property/FeaturedImage/CropImage\";\nexport default function FeaturedImage(props) {\n  _s();\n\n  var _this = this;\n\n  var items = props.items,\n      selectedItem = props.selectedItem,\n      onUploadSuccess = props.onUploadSuccess,\n      onSelectImage = props.onSelectImage;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  function showModal() {\n    setVisible(true);\n  }\n\n  function handleCancel() {\n    setVisible(false);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    onClick: showModal,\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Attach Featured Image\"), __jsx(Modal, {\n    visible: visible,\n    className: \"media-modal\",\n    title: \"Media\",\n    onCancel: handleCancel,\n    onOk: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Tabs, {\n    defaultActiveKey: \"1\",\n    style: {\n      margin: \"0 20px\",\n      background: \"#fff\",\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, __jsx(TabPane, {\n    tab: \"Upload\",\n    key: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, __jsx(DropzoneWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, __jsx(Dropzone, {\n    onUploadSuccess: onUploadSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }))), __jsx(TabPane, {\n    tab: \"Images\",\n    key: \"featured\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(GalleryWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, items.map(function (item, index) {\n    return __jsx(_Col, {\n      key: index,\n      lg: 4,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(item.file, \")\"),\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        paddingTop: \"100%\"\n      },\n      className: classNames(\"gallery-item\", {\n        active: item.id === (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.id)\n      }),\n      onClick: function onClick() {\n        return onSelectImage(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, __jsx(CropImage, {\n      imageTitle: item.title,\n      imagePath: item.file,\n      onUploadSuccess: onUploadSuccess,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    })));\n  })))))));\n}\n\n_s(FeaturedImage, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = FeaturedImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeaturedImage\");","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/components/Admin/Property/FeaturedImage/FeaturedImage.js"],"names":["Modal","React","useState","Tabs","TabPane","DropzoneWrapper","Dropzone","classNames","GalleryWrapper","CropImage","FeaturedImage","props","items","selectedItem","onUploadSuccess","onSelectImage","visible","setVisible","showModal","handleCancel","marginTop","margin","background","padding","map","item","index","backgroundImage","file","backgroundPosition","backgroundSize","paddingTop","active","id","title"],"mappings":"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","sourcesContent":["import Modal from \"@iso/components/Feedback/Modal\";\r\n\r\nimport React, {useState} from \"react\";\r\nimport Tabs, {TabPane} from \"@iso/components/uielements/tabs\";\r\nimport {Button} from \"antd\";\r\nimport DropzoneWrapper from \"../Dropzone/Dropzone.styles\";\r\nimport Dropzone from \"../Dropzone/Dropzone\";\r\nimport {Row, Col} from \"antd\";\r\nimport classNames from \"classnames\";\r\nimport GalleryWrapper from \"../Gallery/Gallery.styles\";\r\nimport CropImage from \"@components/Admin/Property/FeaturedImage/CropImage\";\r\n\r\nexport default function FeaturedImage(props) {\r\n    const {items, selectedItem, onUploadSuccess, onSelectImage} = props;\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    function showModal() {\r\n        setVisible(true);\r\n    }\r\n\r\n    function handleCancel() {\r\n        setVisible(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button type=\"primary\" onClick={showModal} style={{marginTop: 20}}>\r\n                Attach Featured Image\r\n            </Button>\r\n            <Modal\r\n                visible={visible}\r\n                className=\"media-modal\"\r\n                title=\"Media\"\r\n                onCancel={handleCancel}\r\n                onOk={handleCancel}\r\n            >\r\n                <Tabs\r\n                    defaultActiveKey=\"1\"\r\n                    style={{margin: \"0 20px\", background: \"#fff\", padding: 20}}\r\n                >\r\n                    <TabPane tab=\"Upload\" key=\"upload\">\r\n                        <DropzoneWrapper>\r\n                            <Dropzone onUploadSuccess={onUploadSuccess}/>\r\n                        </DropzoneWrapper>\r\n                    </TabPane>\r\n                    <TabPane tab=\"Images\" key=\"featured\">\r\n                        <GalleryWrapper>\r\n                            <Row>\r\n                                {items.map((item, index) => (\r\n                                    <Col key={index} lg={4} sm={6}>\r\n                                        <div\r\n                                            style={{\r\n                                                backgroundImage: `url(${item.file})`,\r\n                                                backgroundPosition: \"center\",\r\n                                                backgroundSize: \"cover\",\r\n                                                paddingTop: \"100%\",\r\n                                            }}\r\n                                            className={classNames(\"gallery-item\", {\r\n                                                active: item.id === selectedItem?.id,\r\n                                            })}\r\n                                            onClick={() => onSelectImage(item)}\r\n                                        >\r\n                                            <CropImage\r\n                                                imageTitle={item.title}\r\n                                                imagePath={item.file}\r\n                                                onUploadSuccess={onUploadSuccess}/>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </GalleryWrapper>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}