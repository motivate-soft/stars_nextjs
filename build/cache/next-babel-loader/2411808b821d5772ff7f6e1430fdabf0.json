{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _Row from \"antd/lib/row\";\nimport _Radio from \"antd/lib/radio\";\nimport _Col from \"antd/lib/col\";\nimport _Form from \"antd/lib/form\";\nimport _Input from \"antd/lib/input\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nvar formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nvar settingKeys = [\"price\", \"minPrice\", \"minMonthPrice\", \"bathroomCount\", \"bedroomCount\", \"sleeps\", \"minSleeps\", \"cleaningFee\", \"transactionFeeRate\", \"taxRate\", \"tour360\", \"refundableAmount\", \"furnished\", \"rentalParking\", \"petsConsidered\"];\nvar integerValidationRule = {\n  pattern: /^[0-9\\b]+$/,\n  message: \"Value should integer\"\n};\nvar floatValidationRule = {\n  pattern: /^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$/,\n  message: \"Value should contain just number\"\n};\nvar requiredRule = {\n  required: true,\n  message: \"Please fill this field\"\n};\n\nfunction Setting(props) {\n  var setting = props.setting,\n      onValuesChange = props.onValuesChange;\n  var price = setting.price,\n      minPrice = setting.minPrice,\n      minMonthPrice = setting.minMonthPrice,\n      bathroomCount = setting.bathroomCount,\n      bedroomCount = setting.bedroomCount,\n      sleeps = setting.sleeps,\n      minSleeps = setting.minSleeps,\n      cleaningFee = setting.cleaningFee,\n      transactionFeeRate = setting.transactionFeeRate,\n      taxRate = setting.taxRate,\n      tour360 = setting.tour360,\n      refundableAmount = setting.refundableAmount,\n      furnished = setting.furnished,\n      rentalParking = setting.rentalParking,\n      petsConsidered = setting.petsConsidered;\n\n  var onFinish = function onFinish(values) {\n    console.log(\"Received values of form: \", values);\n  }; // if (\n  //   settingKeys.findIndex(\n  //     (key) => setting[key] === null || setting[key] === undefined\n  //   ) > -1\n  // ) {\n  //   return null;\n  // }\n\n\n  return __jsx(_Form, _extends({\n    name: \"validate_other\"\n  }, formItemLayout, {\n    onValuesChange: onValuesChange,\n    onFinish: onFinish,\n    initialValues: {\n      price: price,\n      minPrice: minPrice,\n      minMonthPrice: minMonthPrice,\n      bathroomCount: bathroomCount,\n      bedroomCount: bedroomCount,\n      sleeps: sleeps,\n      minSleeps: minSleeps,\n      cleaningFee: cleaningFee,\n      transactionFeeRate: transactionFeeRate,\n      taxRate: taxRate,\n      tour360: tour360,\n      refundableAmount: refundableAmount,\n      furnished: furnished,\n      rentalParking: rentalParking,\n      petsConsidered: petsConsidered\n    }\n  }), __jsx(_Row, {\n    gutter: [32, 32]\n  }, __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Price\",\n    name: \"price\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Starting nightly Price \",\n    name: \"minPrice\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Starting Monthly Price\",\n    name: \"minMonthPrice\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Bedroom\",\n    name: \"bedroomCount\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Bathroom\",\n    name: \"bathroomCount\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Sleeps\",\n    name: \"sleeps\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Minimum number of nights\",\n    name: \"minSleeps\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Cleaning fee\",\n    name: \"cleaningFee\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Transaction fee(%)\",\n    name: \"transactionFeeRate\",\n    rules: [floatValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Tax(%)\",\n    name: \"taxRate\",\n    rules: [floatValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Refundable Security Deposit\",\n    name: \"refundableAmount\",\n    rules: [integerValidationRule, requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    label: \"Tour360\",\n    name: \"tour360\",\n    rules: [requiredRule]\n  }, __jsx(_Input, null))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    name: \"furnished\",\n    label: \"Furnished\",\n    rules: [requiredRule]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: \"1\"\n  }, \"Yes\"), __jsx(_Radio, {\n    value: \"0\"\n  }, \"No\")))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    name: \"rentalParking\",\n    label: \"RentalParking\",\n    rules: [requiredRule]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: \"1\"\n  }, \"Yes\"), __jsx(_Radio, {\n    value: \"0\"\n  }, \"No\")))), __jsx(_Col, {\n    lg: 8,\n    md: 12,\n    sm: 24,\n    xs: 24\n  }, __jsx(_Form.Item, {\n    name: \"petsConsidered\",\n    label: \"PetsConsidered\",\n    rules: [requiredRule]\n  }, __jsx(_Radio.Group, null, __jsx(_Radio, {\n    value: \"1\"\n  }, \"Yes\"), __jsx(_Radio, {\n    value: \"0\"\n  }, \"No\"))))));\n}\n\nexport default Setting;","map":null,"metadata":{},"sourceType":"module"}