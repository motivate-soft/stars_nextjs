{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"E:\\\\Projects\\\\starsofboston\\\\next-django\\\\isomorphic-next\\\\containers\\\\Admin\\\\Sidebar\\\\Sidebar.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clone from 'clone';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/Logo.next';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nimport SIDEBAR_MENU_OPTIONS from './sidebar.navigations';\nimport { SidebarMenuLevelIcon } from '@iso/config/icon.config';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst {\n  Sider\n} = _Layout;\nconst {\n  toggleOpenDrawer,\n  changeOpenKeys,\n  changeCurrent,\n  toggleCollapsed\n} = appActions;\nexport default function Sidebar(props) {\n  const {\n    view,\n    openKeys,\n    collapsed,\n    openDrawer,\n    height,\n    current\n  } = useSelector(state => state.App);\n  const {\n    sidebarTheme\n  } = useSelector(state => state.ThemeSwitcher);\n  const dispatch = useDispatch();\n\n  function handleClick(e) {\n    dispatch(changeCurrent([e.key]));\n\n    if (view === 'MobileView') {\n      setTimeout(() => {\n        dispatch(toggleCollapsed()); // dispatch(toggleOpenDrawer());\n      }, 100);\n    }\n  }\n\n  function onOpenChange(newOpenKeys) {\n    const latestOpenKey = newOpenKeys.find(key => !(openKeys.indexOf(key) > -1));\n    const latestCloseKey = openKeys.find(key => !(newOpenKeys.indexOf(key) > -1));\n    let nextOpenKeys = [];\n\n    if (latestOpenKey) {\n      nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n    }\n\n    if (latestCloseKey) {\n      nextOpenKeys = getAncestorKeys(latestCloseKey);\n    }\n\n    dispatch(changeOpenKeys(nextOpenKeys));\n  }\n\n  const getAncestorKeys = key => {\n    const map = {\n      sub3: ['sub2']\n    };\n    return map[key] || [];\n  };\n\n  const isCollapsed = collapsed && !openDrawer;\n  const mode = isCollapsed === true ? 'vertical' : 'inline';\n  const scrollheight = height;\n  const styling = {\n    backgroundColor: sidebarTheme.backgroundColor\n  };\n  const submenuStyle = {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    color: sidebarTheme.textColor\n  };\n  const submenuColor = {\n    color: sidebarTheme.textColor\n  };\n\n  const onMouseEnter = () => {\n    if (collapsed && openDrawer === false) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  const onMouseLeave = () => {\n    if (collapsed && openDrawer === true) {\n      dispatch(toggleOpenDrawer());\n    }\n\n    return;\n  };\n\n  return __jsx(SidebarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(Sider, {\n    trigger: null,\n    collapsible: true,\n    collapsed: isCollapsed,\n    width: 240,\n    className: \"isomorphicSidebar\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    style: styling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, __jsx(Logo, {\n    collapsed: isCollapsed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), __jsx(Scrollbars, {\n    style: {\n      height: scrollheight - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, __jsx(Menu, {\n    onClick: handleClick,\n    theme: \"dark\",\n    mode: mode,\n    openKeys: isCollapsed ? [] : openKeys,\n    selectedKeys: current,\n    onOpenChange: onOpenChange,\n    className: \"isoDashboardMenu\" // inlineCollapsed={isCollapsed}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, SIDEBAR_MENU_OPTIONS.map(option => __jsx(SidebarMenu, {\n    key: option.key,\n    item: option,\n    submenuColor: submenuColor,\n    submenuStyle: submenuStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }))))));\n}","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/containers/Admin/Sidebar/Sidebar.js"],"names":["React","useDispatch","useSelector","clone","Scrollbars","Menu","IntlMessages","appActions","Logo","SidebarWrapper","SidebarMenu","SIDEBAR_MENU_OPTIONS","SidebarMenuLevelIcon","SubMenu","MenuItemGroup","ItemGroup","Sider","toggleOpenDrawer","changeOpenKeys","changeCurrent","toggleCollapsed","Sidebar","props","view","openKeys","collapsed","openDrawer","height","current","state","App","sidebarTheme","ThemeSwitcher","dispatch","handleClick","e","key","setTimeout","onOpenChange","newOpenKeys","latestOpenKey","find","indexOf","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","map","sub3","isCollapsed","mode","scrollheight","styling","backgroundColor","submenuStyle","color","textColor","submenuColor","onMouseEnter","onMouseLeave","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport clone from 'clone';\nimport {Layout} from 'antd';\nimport {Scrollbars} from 'react-custom-scrollbars';\nimport Menu from '@iso/components/uielements/menu';\nimport IntlMessages from '@iso/components/utility/intlMessages';\n\nimport appActions from '@iso/redux/app/actions';\nimport Logo from '@iso/components/utility/Logo.next';\nimport SidebarWrapper from './Sidebar.styles';\nimport SidebarMenu from './SidebarMenu';\nimport SIDEBAR_MENU_OPTIONS from './sidebar.navigations';\nimport {SidebarMenuLevelIcon} from '@iso/config/icon.config';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\nconst {Sider} = Layout;\nconst {\n    toggleOpenDrawer,\n    changeOpenKeys,\n    changeCurrent,\n    toggleCollapsed,\n} = appActions;\nexport default function Sidebar(props) {\n    const {\n        view,\n        openKeys,\n        collapsed,\n        openDrawer,\n        height,\n        current,\n    } = useSelector((state) => state.App);\n    const {sidebarTheme} = useSelector((state) => state.ThemeSwitcher);\n    const dispatch = useDispatch();\n\n    function handleClick(e) {\n        dispatch(changeCurrent([e.key]));\n        if (view === 'MobileView') {\n            setTimeout(() => {\n                dispatch(toggleCollapsed());\n                // dispatch(toggleOpenDrawer());\n            }, 100);\n        }\n    }\n\n    function onOpenChange(newOpenKeys) {\n        const latestOpenKey = newOpenKeys.find(\n            (key) => !(openKeys.indexOf(key) > -1)\n        );\n        const latestCloseKey = openKeys.find(\n            (key) => !(newOpenKeys.indexOf(key) > -1)\n        );\n        let nextOpenKeys = [];\n        if (latestOpenKey) {\n            nextOpenKeys = getAncestorKeys(latestOpenKey).concat(latestOpenKey);\n        }\n        if (latestCloseKey) {\n            nextOpenKeys = getAncestorKeys(latestCloseKey);\n        }\n        dispatch(changeOpenKeys(nextOpenKeys));\n    }\n\n    const getAncestorKeys = (key) => {\n        const map = {\n            sub3: ['sub2'],\n        };\n        return map[key] || [];\n    };\n\n    const isCollapsed = collapsed && !openDrawer;\n    const mode = isCollapsed === true ? 'vertical' : 'inline';\n    const scrollheight = height;\n    const styling = {\n        backgroundColor: sidebarTheme.backgroundColor,\n    };\n    const submenuStyle = {\n        backgroundColor: 'rgba(0,0,0,0.3)',\n        color: sidebarTheme.textColor,\n    };\n    const submenuColor = {\n        color: sidebarTheme.textColor,\n    };\n    const onMouseEnter = () => {\n        if (collapsed && openDrawer === false) {\n            dispatch(toggleOpenDrawer());\n        }\n        return;\n    };\n    const onMouseLeave = () => {\n        if (collapsed && openDrawer === true) {\n            dispatch(toggleOpenDrawer());\n        }\n        return;\n    };\n    return (\n        <SidebarWrapper>\n            <Sider\n                trigger={null}\n                collapsible={true}\n                collapsed={isCollapsed}\n                width={240}\n                className=\"isomorphicSidebar\"\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                style={styling}\n            >\n                <Logo collapsed={isCollapsed}/>\n                <Scrollbars style={{height: scrollheight - 70}}>\n                    <Menu\n                        onClick={handleClick}\n                        theme=\"dark\"\n                        mode={mode}\n                        openKeys={isCollapsed ? [] : openKeys}\n                        selectedKeys={current}\n                        onOpenChange={onOpenChange}\n                        className=\"isoDashboardMenu\"\n                        // inlineCollapsed={isCollapsed}\n                    >\n                        {SIDEBAR_MENU_OPTIONS.map((option) => (\n                            <SidebarMenu\n                                key={option.key}\n                                item={option}\n                                submenuColor={submenuColor}\n                                submenuStyle={submenuStyle}\n                            />\n                        ))}\n                    </Menu>\n                </Scrollbars>\n            </Sider>\n        </SidebarWrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}