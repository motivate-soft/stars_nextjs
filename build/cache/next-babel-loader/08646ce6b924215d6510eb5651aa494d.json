{"ast":null,"code":"import { all, takeEvery, fork, takeLatest, call, put } from \"redux-saga/effects\";\nimport actions from \"./actions\";\nimport { notification } from \"@iso/components\";\nimport categoryApi from \"../../service/categoryApi\";\nexport function* getAllCategories() {\n  yield takeLatest(actions.GET_ALL_CATEGORIES_REQUEST, function* () {\n    try {\n      const res = yield call(categoryApi.getAll);\n      yield put({\n        type: actions.GET_ALL_CATEGORIES_SUCCESS,\n        items: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_ALL_CATEGORIES_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* getCategory() {\n  yield takeEvery(actions.GET_CATEGORY_REQUEST, function* (payload) {\n    try {\n      const res = yield call(categoryApi.getOne, payload.categoryId);\n      yield put({\n        type: actions.GET_CATEGORY_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      yield put({\n        type: actions.GET_CATEGORY_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* addCategory() {\n  yield takeEvery(actions.ADD_CATEGORY_REQUEST, function* (payload) {\n    try {\n      const res = yield call(categoryApi.add, payload.category);\n      notification(\"success\", \"New category has been created\");\n      yield put({\n        type: actions.ADD_CATEGORY_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification(\"warning\", error);\n      yield put({\n        type: actions.ADD_CATEGORY_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* updateCategory() {\n  yield takeEvery(actions.UPDATE_CATEGORY_REQUEST, function* (payload) {\n    try {\n      const res = yield call(categoryApi.update, payload.category);\n      notification(\"success\", \"Category has been updated\");\n      yield put({\n        type: actions.UPDATE_CATEGORY_SUCCESS,\n        item: res\n      });\n    } catch (error) {\n      notification(\"warning\", error);\n      yield put({\n        type: actions.UPDATE_CATEGORY_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport function* deleteCategory() {\n  yield takeEvery(actions.DELETE_CATEGORY_REQUEST, function* (payload) {\n    try {\n      yield call(categoryApi.delete, payload.categoryId);\n      notification(\"success\", \"Category has been deleted\");\n      yield put({\n        type: actions.DELETE_CATEGORY_SUCCESS,\n        categoryId: payload.categoryId\n      });\n    } catch (error) {\n      notification(\"warning\", error);\n      yield put({\n        type: actions.DELETE_CATEGORY_FAILURE,\n        error: error.message\n      });\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([call(getAllCategories), fork(getCategory), fork(addCategory), fork(updateCategory), fork(deleteCategory)]);\n}","map":null,"metadata":{},"sourceType":"module"}