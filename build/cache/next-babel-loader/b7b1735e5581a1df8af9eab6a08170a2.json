{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport moment from \"moment\";\nimport Input from \"@iso/components/uielements/input\";\nimport { DateRangepicker } from \"@iso/components/uielements/datePicker\";\nimport Modal from \"@iso/components/Feedback/Modal\";\nimport { CalendarModalBody } from \"./Calendar.styles\";\nimport DeleteButton from \"./DeleteButton\";\nconst RangePicker = DateRangepicker;\nconst localeDatePicker = {\n  lang: {\n    placeholder: \"Select date\",\n    rangePlaceholder: [\"Start date\", \"End date\"],\n    today: \"Today\",\n    now: \"Now\",\n    backToToday: \"Back to today\",\n    ok: \"Ok\",\n    clear: \"Clear\",\n    month: \"Month\",\n    year: \"Year\",\n    timeSelect: \"Select time\",\n    dateSelect: \"Select date\",\n    monthSelect: \"Choose a month\",\n    yearSelect: \"Choose a year\",\n    decadeSelect: \"Choose a decade\",\n    yearFormat: \"YYYY\",\n    dateFormat: \"M/D/YYYY\",\n    dayFormat: \"D\",\n    dateTimeFormat: \"M/D/YYYY HH:mm:ss\",\n    monthFormat: \"MMMM\",\n    monthBeforeYear: true,\n    previousMonth: \"Previous month (PageUp)\",\n    nextMonth: \"Next month (PageDown)\",\n    previousYear: \"Last year (Control + left)\",\n    nextYear: \"Next year (Control + right)\",\n    previousDecade: \"Last decade\",\n    nextDecade: \"Next decade\",\n    previousCentury: \"Last century\",\n    nextCentury: \"Next century\"\n  },\n  timePickerLocale: {\n    placeholder: \"Select time\"\n  }\n};\nexport default function (props) {\n  const {\n    modalVisible,\n    modalData,\n    onModalDataChange\n  } = props;\n\n  const handleOk = () => {\n    onModalDataChange(\"ok\", modalData);\n  };\n\n  const handleCancel = () => {\n    onModalDataChange(\"cancel\");\n  };\n\n  const handleDelete = () => {\n    onModalDataChange(\"delete\", modalData);\n  };\n\n  const visible = !!modalVisible;\n  if (!visible) return null;\n  console.log(\"__modalData__\", modalData);\n  const price = modalData && modalData.price ? modalData.price : \"\";\n  const start = modalData && modalData.start ? moment(modalData.start) : \"\";\n  const end = modalData && modalData.end ? moment(modalData.end) : \"\";\n\n  const onChangePrice = event => {\n    console.log(\"onChangePrice\", event);\n    modalData.price = event.target.value;\n    onModalDataChange(\"updateValue\", modalData);\n  };\n\n  const onChangeFromTimePicker = value => {\n    try {\n      modalData.start = value[0].toDate();\n      modalData.end = value[1].toDate();\n    } catch (e) {}\n\n    onModalDataChange(\"updateValue\", modalData);\n  };\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    title: \"Set pricing\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    okText: \"Save\",\n    cancelText: \"Cancel\"\n  }, __jsx(CalendarModalBody, null, __jsx(\"div\", {\n    className: \"isoCalendarInputWrapper\"\n  }, __jsx(Input, {\n    value: price,\n    placeholder: \"price for this period\",\n    onChange: onChangePrice\n  })), __jsx(\"div\", {\n    className: \"isoCalendarDatePicker\"\n  }, __jsx(RangePicker, {\n    locale: localeDatePicker,\n    ranges: {\n      Today: [moment(), moment()],\n      \"This Month\": [moment(), moment().endOf(\"month\")]\n    },\n    value: [start, end],\n    showTime: true,\n    format: \"YYYY/MM/DD HH:mm:ss\",\n    onChange: onChangeFromTimePicker\n  }), __jsx(DeleteButton, {\n    handleDelete: handleDelete\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}