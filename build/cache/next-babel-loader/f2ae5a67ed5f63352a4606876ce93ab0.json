{"ast":null,"code":"import _EditOutlined from \"@ant-design/icons/lib/icons/EditOutlined\";\nimport _CheckOutlined from \"@ant-design/icons/lib/icons/CheckOutlined\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Textarea as Input } from './uielements/input';\nexport default function EditableComponent(props) {\n  var _React$useState = React.useState({\n    value: props.value,\n    editable: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  function handleChange(event) {\n    var value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      value: value\n    }));\n  }\n\n  function check() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: false\n    }));\n\n    if (props.onChange) {\n      props.onChange(props.itemKey, state.value);\n    }\n  }\n\n  function edit() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editable: true\n    }));\n  }\n\n  var value = state.value,\n      editable = state.editable;\n  return __jsx(\"div\", {\n    className: \"isoNoteContent\"\n  }, editable ? __jsx(\"div\", {\n    className: \"isoNoteEditWrapper\"\n  }, __jsx(Input, {\n    rows: 3,\n    value: value,\n    onChange: handleChange,\n    onPressEnter: check\n  }), __jsx(_CheckOutlined, {\n    className: \"isoNoteEditIcon\",\n    onClick: check\n  })) : __jsx(\"p\", {\n    className: \"isoNoteTextWrapper\",\n    onClick: edit\n  }, value || ' ', __jsx(_EditOutlined, {\n    className: \"isoNoteEditIcon\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}