{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport jwtConfig from '@iso/config/jwt.config';\nimport jwtDecode from 'jwt-decode';\nvar resStatus = 0;\n\nvar JwtAuth = function JwtAuth() {\n  _classCallCheck(this, JwtAuth);\n\n  _defineProperty(this, \"login\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userInfo) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(jwtConfig.fetchUrl, {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userInfo)\n              }).then(function (res) {\n                if (res.ok) {\n                  return res.json();\n                }\n\n                throw res;\n              })[\"catch\"](function (res) {\n                console.log(\"___\", res);\n\n                if (res instanceof Error) {\n                  throw Error('Network error');\n                }\n\n                var error = new Error(); // res.json().then((responseJson) => {\n                //     error = {\n                //         status: res.status,\n                //         statusText: res.statusText,\n                //         message: responseJson.detail || 'Application Error'\n                //     }\n                //     throw error\n                // })\n\n                if (res.status >= 400 && res.status < 500) {\n                  console.log(res.text());\n                  error = {\n                    status: res.status,\n                    statusText: res.statusText,\n                    message: res.detail || 'Application Error'\n                  };\n                  throw error;\n                }\n\n                if (res.status >= 500) {\n                  error = {\n                    status: res.status,\n                    statusText: res.statusText,\n                    message: res.detail || 'Server Error'\n                  };\n                  throw error;\n                }\n\n                error = _objectSpread(_objectSpread({}, error), {}, {\n                  status: res.status,\n                  statusText: res.statusText,\n                  message: res.detail || 'Error'\n                });\n                throw error;\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\n\nexport default new JwtAuth();","map":{"version":3,"sources":["E:/Projects/starsofboston/next-django/isomorphic-next/redux/authentication/jwtAuthentication.js"],"names":["jwtConfig","jwtDecode","resStatus","JwtAuth","userInfo","fetch","fetchUrl","method","headers","Accept","body","JSON","stringify","then","res","ok","json","console","log","Error","error","status","text","statusText","message","detail"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,SAAS,GAAG,CAAhB;;IAEMC,O;;;;wEACM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,KAAK,CAACL,SAAS,CAACM,QAAX,EAAqB;AACnCC,gBAAAA,MAAM,EAAE,MAD2B;AAEnCC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,MAAM,EAAE,kBADH;AAEL,kCAAgB;AAFX,iBAF0B;AAMnCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAN6B,eAArB,CAAL,CAQRS,IARQ,CAQH,UAAAC,GAAG,EAAI;AACT,oBAAIA,GAAG,CAACC,EAAR,EAAY;AACR,yBAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,sBAAMF,GAAN;AACH,eAbQ,WAcF,UAAAA,GAAG,EAAI;AACVG,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;;AACA,oBAAIA,GAAG,YAAYK,KAAnB,EAA0B;AACtB,wBAAMA,KAAK,CAAC,eAAD,CAAX;AACH;;AAED,oBAAIC,KAAK,GAAG,IAAID,KAAJ,EAAZ,CANU,CAOV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,oBAAIL,GAAG,CAACO,MAAJ,IAAc,GAAd,IAAqBP,GAAG,CAACO,MAAJ,GAAa,GAAtC,EAA2C;AACvCJ,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACQ,IAAJ,EAAZ;AACAF,kBAAAA,KAAK,GAAG;AACJC,oBAAAA,MAAM,EAAEP,GAAG,CAACO,MADR;AAEJE,oBAAAA,UAAU,EAAET,GAAG,CAACS,UAFZ;AAGJC,oBAAAA,OAAO,EAAEV,GAAG,CAACW,MAAJ,IAAc;AAHnB,mBAAR;AAKA,wBAAML,KAAN;AACH;;AAED,oBAAIN,GAAG,CAACO,MAAJ,IAAc,GAAlB,EAAuB;AACnBD,kBAAAA,KAAK,GAAG;AACJC,oBAAAA,MAAM,EAAEP,GAAG,CAACO,MADR;AAEJE,oBAAAA,UAAU,EAAET,GAAG,CAACS,UAFZ;AAGJC,oBAAAA,OAAO,EAAEV,GAAG,CAACW,MAAJ,IAAc;AAHnB,mBAAR;AAKA,wBAAML,KAAN;AACH;;AAEDA,gBAAAA,KAAK,mCACEA,KADF;AAEDC,kBAAAA,MAAM,EAAEP,GAAG,CAACO,MAFX;AAGDE,kBAAAA,UAAU,EAAET,GAAG,CAACS,UAHf;AAIDC,kBAAAA,OAAO,EAAEV,GAAG,CAACW,MAAJ,IAAc;AAJtB,kBAAL;AAMA,sBAAML,KAAN;AACH,eAvDQ,CADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;AA4DZ,eAAe,IAAIjB,OAAJ,EAAf","sourcesContent":["import jwtConfig from '@iso/config/jwt.config';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nlet resStatus = 0\r\n\r\nclass JwtAuth {\r\n    login = async userInfo => {\r\n        return await fetch(jwtConfig.fetchUrl, {\r\n            method: 'post',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userInfo),\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json()\r\n                }\r\n                throw res;\r\n            })\r\n            .catch(res => {\r\n                console.log(\"___\", res)\r\n                if (res instanceof Error) {\r\n                    throw Error('Network error');\r\n                }\r\n\r\n                let error = new Error();\r\n                // res.json().then((responseJson) => {\r\n                //     error = {\r\n                //         status: res.status,\r\n                //         statusText: res.statusText,\r\n                //         message: responseJson.detail || 'Application Error'\r\n                //     }\r\n                //     throw error\r\n                // })\r\n                if (res.status >= 400 && res.status < 500) {\r\n                    console.log(res.text())\r\n                    error = {\r\n                        status: res.status,\r\n                        statusText: res.statusText,\r\n                        message: res.detail || 'Application Error'\r\n                    }\r\n                    throw error\r\n                }\r\n\r\n                if (res.status >= 500) {\r\n                    error = {\r\n                        status: res.status,\r\n                        statusText: res.statusText,\r\n                        message: res.detail || 'Server Error'\r\n                    }\r\n                    throw error\r\n                }\r\n\r\n                error = {\r\n                    ...error,\r\n                    status: res.status,\r\n                    statusText: res.statusText,\r\n                    message: res.detail || 'Error'\r\n                }\r\n                throw error\r\n            });\r\n    };\r\n}\r\n\r\nexport default new JwtAuth();\r\n"]},"metadata":{},"sourceType":"module"}