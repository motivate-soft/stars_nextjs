{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Form from \"antd/lib/form\";\nimport _Switch from \"antd/lib/switch\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { getCookie } from \"@redux/authentication/auth.utils\";\nimport { BACKEND_URL } from \"../../../../env-config\";\nconst formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst requiredRule = {\n  required: true,\n  message: \"Please fill this field\"\n};\nexport default function Amenity(props) {\n  const {\n    0: options,\n    1: setOptions\n  } = useState(null);\n  const {\n    amenities,\n    onToggleOption\n  } = props;\n  useEffect(() => {\n    getAmenityData();\n  }, []);\n\n  async function getAmenityData() {\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/accommodation/amenity/`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${getCookie(\"token\")}`\n        }\n      }).then(res => res.json()).then(res => res).catch(error => error);\n      console.log(\"res\", res);\n      setOptions(res);\n    } catch (error) {\n      setOptions([]);\n    }\n  }\n\n  const onFinish = values => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      margin: \"0 20px\",\n      background: \"#fff\",\n      padding: 20\n    }\n  }, __jsx(_Row, null, options && options.length > 0 && options.map((option, index) => __jsx(_Col, {\n    key: index,\n    lg: 12,\n    sm: 24\n  }, __jsx(_Form.Item, {\n    label: option.name\n  }, __jsx(_Switch, {\n    checked: (amenities === null || amenities === void 0 ? void 0 : amenities.length) > 0 && amenities.indexOf(option.id) > -1,\n    onChange: () => onToggleOption(option.id)\n  }))))));\n}","map":null,"metadata":{},"sourceType":"module"}