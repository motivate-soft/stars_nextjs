{"ast":null,"code":"import _Button from \"antd/lib/button\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState } from 'react';\nimport Link from 'next/link';\nimport ReservationFormWrapper, { FormActionArea, FieldWrapper, RoomGuestWrapper, ItemWrapper } from './Reservation.style.js';\nimport DateRangePickerBox from \"@iso/components/DatePicker/ReactDates\";\nimport ViewWithPopup from \"@components/Common/ViewWithPopup/ViewWithPopup\";\nimport InputIncDec from \"@components/Common/InputIncDec/InputIncDec\";\nimport { BookingContext } from \"@context/BookingProvider\";\nimport Router from \"next/router\";\nimport moment from 'moment';\nimport { notification } from \"@iso/components\";\n\nfunction ReservationForm(props) {\n  const {\n    propertyId,\n    propertySlug,\n    bookervilleId,\n    price,\n    checkedDates,\n    pricingItems\n  } = props;\n  const {\n    0: formState,\n    1: setFormState\n  } = useState({\n    checkinDate: null,\n    checkoutDate: null,\n    adults: 0,\n    children: 0\n  });\n  const {\n    state,\n    dispatch\n  } = useContext(BookingContext);\n\n  const handleIncrement = type => {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      [type]: parseInt(formState[type]) + 1\n    }));\n  };\n\n  const handleDecrement = type => {\n    if (formState[type] <= 0) {\n      return false;\n    }\n\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      [type]: parseInt(formState[type]) - 1\n    }));\n  };\n\n  const handleIncDecOnChnage = (e, type) => {\n    let currentValue = e.target.value;\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      [type]: parseInt(currentValue)\n    }));\n  };\n\n  const updateSearchDataFunc = value => {\n    setFormState(_objectSpread(_objectSpread({}, formState), {}, {\n      checkinDate: value.setStartDate,\n      checkoutDate: value.setEndDate\n    }));\n  };\n\n  const isSameDay = (a, b) => {\n    if (!moment.isMoment(a) || !moment.isMoment(b)) return false; // Compare least significant, most likely to change units first\n    // Moment's isSame clones moment inputs and is a tad slow\n\n    return a.date() === b.date() && a.month() === b.month() && a.year() === b.year();\n  };\n\n  const isDayBooked = day => {\n    return checkedDates.some((range, index) => {\n      if (day.isSameOrAfter(range.arrival_date, 'day') && day.isSameOrBefore(range.departure_date, 'day')) {\n        return true;\n      }\n\n      return false;\n    });\n  };\n\n  const isDayBlocked = day => {\n    if (moment(day) < moment().startOf('day')) {\n      return true;\n    }\n\n    if (isDayBooked(day) === true) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const renderDayContents = day => {\n    // console.log(\"renderDayContents\", day)\n    let dayPrice = price;\n\n    if (moment(day) < moment().startOf('day')) {\n      return __jsx(\"div\", {\n        className: \"past-date\"\n      }, __jsx(\"h6\", null, day.format('D')));\n    } else {\n      if (isDayBooked(day) === true) {\n        return __jsx(\"div\", {\n          className: \"booked-date\"\n        }, __jsx(\"h6\", null, day.format('D')));\n      } else {\n        pricingItems.map(item => {\n          if (moment(day) > moment(new Date(item.start_date)) && moment(day) < moment(new Date(item.end_date))) {\n            dayPrice = item.price;\n          }\n        });\n        return __jsx(\"div\", {\n          className: \"date\"\n        }, __jsx(\"h6\", null, day.format('D')), __jsx(\"span\", null, \"$\", price));\n      }\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (formState.checkinDate === null || formState.checkoutDate === null) {\n      notification('warning', 'Please select dates');\n      return;\n    }\n\n    if (formState.adults === 0) {\n      notification('warning', 'Please input number of guests');\n      return;\n    }\n\n    dispatch({\n      type: 'UPDATE_BOOKING_INFORMATION',\n      payload: _objectSpread(_objectSpread(_objectSpread({}, state), {}, {\n        propertyId,\n        propertySlug,\n        bookervilleId\n      }, formState), {}, {\n        checkinDate: moment(formState.checkinDate).toISOString(),\n        checkoutDate: moment(formState.checkoutDate).toISOString()\n      })\n    });\n    Router.push({\n      pathname: `/checkout`\n    }, {\n      pathname: `/checkout`\n    }, {\n      shallow: true\n    });\n  };\n\n  return __jsx(ReservationFormWrapper, {\n    className: \"form-container\",\n    onSubmit: handleSubmit\n  }, __jsx(FieldWrapper, null, __jsx(DateRangePickerBox, {\n    startDatePlaceholderText: \"Check In\",\n    endDatePlaceholderText: \"Check Out\",\n    startDateId: \"startDateId-id\",\n    endDateId: \"endDateId-id\",\n    showClearDates: true,\n    small: true,\n    numberOfMonths: 1,\n    updateSearchData: value => updateSearchDataFunc(value),\n    isDayBlocked: day => isDayBlocked(day),\n    renderDayContents: day => renderDayContents(day),\n    displayFormat: 'MMM DD YYYY' // checkinDateId=\"checkin-Id\"\n    // checkoutDateId=\"checkout-id\"\n    // checkinDatePlaceholderText=\"Check In\"\n    // checkoutDatePlaceholderText=\"Check Out\"\n    // updateSearchData={(value) => updateSearchDataFunc(value)}\n    // renderDayContents={(day) => renderDayContents(day)}\n    // numberOfMonths={1}\n    // small\n\n  })), __jsx(FieldWrapper, null, __jsx(ViewWithPopup, {\n    key: 200,\n    noView: true,\n    className: formState.adults || formState.children ? 'activated' : '',\n    view: __jsx(_Button, {\n      type: \"default\"\n    }, __jsx(\"span\", null, \"Adults \", formState.adults > 0 && `: ${formState.adults}`), __jsx(\"span\", null, \"-\"), __jsx(\"span\", null, \"Children\", formState.children > 0 && `: ${formState.children}`)),\n    popup: __jsx(RoomGuestWrapper, null, __jsx(ItemWrapper, null, __jsx(\"strong\", null, \"Adults\"), __jsx(InputIncDec, {\n      id: \"adults\",\n      increment: () => handleIncrement('adults'),\n      decrement: () => handleDecrement('adults'),\n      onChange: e => handleIncDecOnChnage(e, 'adults'),\n      value: formState.adults\n    })), __jsx(ItemWrapper, null, __jsx(\"strong\", null, \"Children\"), __jsx(InputIncDec, {\n      id: \"children\",\n      increment: () => handleIncrement('children'),\n      decrement: () => handleDecrement('children'),\n      onChange: e => handleIncDecOnChnage(e, 'children'),\n      value: formState.children\n    })))\n  })), __jsx(FormActionArea, null, __jsx(_Button, {\n    htmlType: \"submit\",\n    type: \"secondary\",\n    size: \"large\"\n  }, \"Book Now\"), __jsx(\"p\", null, \"For booking assistance please \", __jsx(Link, {\n    href: \"/contact\"\n  }, \"contact us\"))));\n}\n\n;\nexport default ReservationForm;","map":null,"metadata":{},"sourceType":"module"}