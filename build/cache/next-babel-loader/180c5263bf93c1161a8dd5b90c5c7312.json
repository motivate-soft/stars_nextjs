{"ast":null,"code":"import _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _InboxOutlined from \"@ant-design/icons/lib/icons/InboxOutlined\";\nimport _Input from \"antd/lib/input\";\nimport _Button from \"antd/lib/button\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"@iso/components/utility/loader\";\nimport Box from \"@iso/ui/Box/Box\";\nimport Container from \"@iso/ui/UI/Container/Container\";\nimport Editor from \"@components/Admin/Property/Editor/Editor\";\nimport Link from \"next/link\";\nimport blogActions from \"@redux/blogs/actions\";\nimport { SingeBlogWrapper } from \"@components/Admin/Blog/Blog.styles\";\nimport Upload from \"@iso/containers/Forms/Upload/Upload\";\nimport { BACKEND_URL } from \"../../../env-config\";\nimport { getCookie } from \"@redux/authentication/auth.utils\";\nconst formItemLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst {\n  useForm\n} = _Form;\n\nconst HtmlEditor = ({\n  value = {},\n  onChange\n}) => {\n  const triggerChange = changedValue => {\n    onChange(changedValue);\n  };\n\n  return __jsx(Editor, {\n    style: {\n      width: \"90%\",\n      height: \"70%\"\n    },\n    toolbarClassName: \"home-toolbar\",\n    wrapperClassName: \"home-wrapper\",\n    editorClassName: \"home-editor\",\n    html: value,\n    onEditorStateChange: html => triggerChange(html)\n  });\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n  if (!isJpgOrPng) {\n    message.error('You can only upload JPG/PNG file!');\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error('Image must smaller than 2MB!');\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nexport default function AddBlog() {\n  const dispatch = useDispatch();\n  const [form] = useForm();\n\n  function onReset() {\n    form.resetFields();\n  }\n\n  function onValuesChange(changedValues, allValues) {\n    console.log(\"AddBlog_onValuesChange\", changedValues, allValues);\n  }\n\n  const onFinish = values => {\n    dispatch(blogActions.addBlog(values));\n  };\n\n  return __jsx(Box, null, __jsx(Container, null, __jsx(_Row, null, __jsx(_Col, {\n    lg: {\n      span: 20,\n      offset: 2\n    },\n    sm: 24\n  }, __jsx(SingeBlogWrapper, null, __jsx(\"div\", {\n    className: \"card-title-wrapper\"\n  }, __jsx(\"h3\", null, \"Add Blog\"), __jsx(Link, {\n    href: \"/admin/blog\"\n  }, __jsx(_Button, {\n    type: \"primary\"\n  }, \"Back to List\"))), __jsx(_Form, _extends({\n    name: \"mainInfo\"\n  }, formItemLayout, {\n    onFinish: onFinish,\n    onValuesChange: onValuesChange,\n    initialValues: {\n      title: '',\n      body: '',\n      image: {}\n    }\n  }), __jsx(_Form.Item, {\n    label: \"Title\",\n    name: \"title\",\n    rules: [{\n      required: true,\n      message: \"This field is required\"\n    }]\n  }, __jsx(_Input, null)), __jsx(_Form.Item, {\n    label: \"Content\",\n    name: \"body\",\n    rules: [{\n      required: true,\n      message: \"This field is required\"\n    }]\n  }, __jsx(HtmlEditor, null)), __jsx(_Form.Item, {\n    label: \"image\"\n  }, __jsx(_Form.Item, {\n    name: \"image\",\n    valuePropName: \"fileList\",\n    getValueFromEvent: normFile,\n    noStyle: true\n  }, __jsx(Upload.Dragger, {\n    name: \"files\",\n    action: \"/upload.do\"\n  }, __jsx(\"p\", {\n    className: \"ant-upload-drag-icon\"\n  }, __jsx(_InboxOutlined, null)), __jsx(\"p\", {\n    className: \"ant-upload-text\"\n  }, \"Click or drag file to this area to upload\"), __jsx(\"p\", {\n    className: \"ant-upload-hint\"\n  }, \"Support for a single or bulk upload.\")))), __jsx(\"div\", null, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"Save\"), __jsx(_Button, {\n    type: \"default\",\n    onClick: onReset\n  }, \"Reset\"))))))));\n}","map":null,"metadata":{},"sourceType":"module"}