{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import clone from \"clone\";\n// import Link from \"next/link\";\n// import Box from \"@iso/components/utility/box\";\n// import HelperText from \"@iso/components/utility/helper-text\";\n// import LayoutWrapper from \"@iso/components/utility/layoutWrapper\";\n// import PageHeader from \"@iso/components/utility/pageHeader\";\n// import Scrollbars from \"@iso/components/utility/customScrollBar\";\n// import Button from \"@iso/components/uielements/button\";\n// import Popconfirm from \"@iso/components/Feedback/Popconfirm\";\n// import {\n//   DateCell,\n//   ImageCell,\n//   LinkCell,\n//   TextCell,\n// } from \"@iso/components/Tables/HelperCells\";\n// import { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\n//\n// import TableWrapper from \"@iso/containers/Tables/AntTables/AntTables.styles\";\n// import CardWrapper from \"./Blog.styles\";\n//\n// import postActions from \"@redux/posts/actions\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useRouter } from \"next/router\";\n//\n// const renderCell = (object, type, key) => {\n//   const value = object[key] ? object[key] : \"\";\n//   switch (type) {\n//     case \"ImageCell\":\n//       return ImageCell(value);\n//     case \"DateCell\":\n//       return DateCell(value);\n//     case \"LinkCell\":\n//       return LinkCell(value);\n//     default:\n//       return TextCell(value);\n//   }\n// };\n//\n// const tableColumns = [\n//   {\n//     title: \"Title\",\n//     key: \"title\",\n//     width: 100,\n//     render: (object) => renderCell(object, \"TextCell\", \"title\"),\n//   },\n//   {\n//     title: \"Created At\",\n//     key: \"created_date\",\n//     width: 200,\n//     render: (object) => renderCell(object, \"DateCell\", \"created_date\"),\n//   },\n//   {\n//     title: \"Updated At\",\n//     key: \"updated_date\",\n//     width: 200,\n//     render: (object) => renderCell(object, \"DateCell\", \"updated_date\"),\n//   },\n// ];\n//\n// export default function BlogList() {\n//   const dispatch = useDispatch();\n//   const { items, loading } = useSelector((state) => state.Posts);\n//   const [state, setState] = React.useState({\n//     columns: createcolumns(clone(tableColumns)),\n//     dataList: items,\n//   });\n//\n//   const router = useRouter();\n//\n//   useEffect(() => {\n//     dispatch(postActions.getAllPosts());\n//   }, []);\n//\n//   useEffect(() => {\n//     setState({\n//       ...state,\n//       dataList: items,\n//     });\n//   }, [items]);\n//\n//   const { columns, dataList } = state;\n//\n//   function createcolumns(columns) {\n//     const optColumn = {\n//       title: \"Action\",\n//       dataIndex: \"operation\",\n//       width: 200,\n//       render: (text, record, index) => (\n//         <div className=\"opt-cell\">\n//           <EditOutlined onClick={() => onEditCell(record.id)} />\n//           <Popconfirm\n//             title=\"Sure to delete?\"\n//             onConfirm={() => onDeleteCell(record.id)}\n//           >\n//             <DeleteOutlined />\n//           </Popconfirm>\n//         </div>\n//       ),\n//     };\n//     columns.push(optColumn);\n//     return columns;\n//   }\n//\n//   function onEditCell(id) {\n//     router.push(`/admin/post?id=${id}`);\n//   }\n//\n//   function onDeleteCell(postId) {\n//     dispatch(postActions.deletePost(postId));\n//   }\n//\n//   return (\n//     <LayoutWrapper>\n//       <PageHeader>Post</PageHeader>\n//       <Box>\n//         <CardWrapper>\n//           <div className=\"isoPostTableBtn\">\n//             <Link href={`post?id=1234`}>\n//               <a>\n//                 <Button type=\"primary\" className=\"mateAddPostBtn\">\n//                   Add Post\n//                 </Button>\n//               </a>\n//             </Link>\n//           </div>\n//           {items?.length === 0 ? (\n//             <HelperText text=\"No Properties found\" />\n//           ) : (\n//             <div className=\"isoPostTable\">\n//               <Scrollbars\n//                 style={{ width: \"100%\", height: \"calc(60vh - 70px)\" }}\n//               >\n//                 <TableWrapper\n//                   onRow={(record, rowIndex) => {\n//                     return {\n//                       onClick: (event) => {\n//                         console.log(\"rowClick\", record, rowIndex);\n//                       },\n//                     };\n//                   }}\n//                   columns={columns}\n//                   dataSource={items}\n//                   // pagination={{ pageSize: 5 }}\n//                   className=\"postListTable\"\n//                 />\n//               </Scrollbars>\n//             </div>\n//           )}\n//         </CardWrapper>\n//       </Box>\n//     </LayoutWrapper>\n//   );\n// }","map":null,"metadata":{},"sourceType":"script"}